{"version":3,"sources":["services/Utils.js","services/Leitner.js","services/Persistence.js","services/WordManager.js","store/settings.js","store/tests.js","store/words.js","store/view.js","services/Voices.js","store/voice.js","store/sounds.js","services/Tones.js","store/tones.js","store/tracking.js","store/index.js","components/common/ScrollReset.js","components/Loading/index.js","components/Navigation/BreadcrumbsItem.js","components/Navigation/Breadcrumbs.js","components/Navigation/MainNavigation.js","components/Navigation/BasicsNavigation.js","components/Navigation/ConsonantNavigation.js","components/Navigation/ToneNavigation.js","components/Progress/ToggleHeader.js","components/common/PlayButton.js","components/common/ProgressIcon.js","components/WordsTable/ProgressItem.js","components/WordsTable/WordsTable.js","components/WordsTable/index.js","components/Progress/Progress.js","components/Progress/index.js","components/Settings/VoiceButton.js","components/Settings/VoiceSelector.js","components/Settings/RateSelector.js","components/Settings/PronunciationSample.js","components/Settings/PronunciationSelector.js","components/Settings/DraggableOrderSelector.js","components/Settings/PracticeOrderSelector.js","components/Settings/RangedNumberSelector.js","components/common/ColorizedThai.js","components/Settings/CharacterClassToggle.js","components/Settings/ResetProgress.js","components/Settings/Settings.js","components/Settings/index.js","components/Practice/Preview.js","components/Practice/Line.js","components/Practice/Card.js","components/common/Hint.js","components/Practice/CardContainer.js","components/Practice/Practice.js","components/Practice/index.js","components/TestSelector/TestSelector.js","components/TestSelector/index.js","components/Quiz/Question.js","components/Quiz/Answer.js","components/Quiz/Advancement.js","components/Quiz/Challenge.js","components/Quiz/Progress.js","components/Quiz/Quiz.js","components/Quiz/index.js","components/TestResults/Score.js","components/TestResults/Item.js","components/TestResults/TestResults.js","components/TestResults/index.js","components/Test/Test.js","components/Test/index.js","components/Vowels/Examples.js","components/Vowels/Vowel.js","components/Vowels/VowelButton.js","components/Vowels/Vowels.js","components/Vowels/index.js","components/Consonants/CategoryPicker.js","components/Consonants/ConsonantList.js","components/Consonants/Consonants.js","components/Consonants/index.js","components/Confusion/ConfusionPicker.js","components/Confusion/ConfusionDetail.js","components/Confusion/DrillAnswer.js","components/Confusion/Drill.js","components/Confusion/Confusion.js","components/Confusion/index.js","components/ConsonantClasses/ReviewCharacter.js","components/common/OutboundLink.js","components/ConsonantClasses/Review.js","components/common/ProgressBar.js","components/ConsonantClasses/Drill.js","components/ConsonantClasses/ConsonantClasses.js","components/ConsonantClasses/index.js","components/ToneRules/DrillButtons.js","components/ToneRules/Review.js","components/ToneRules/Drill.js","components/ToneRules/ToneRules.js","components/ToneRules/index.js","components/common/Tracking.js","components/NotFound/index.js","App.js","registerServiceWorker.js","index.js"],"names":["classNames","obj","Object","keys","reduce","strings","key","join","memoize","fn","size","cache","args","match","find","cachedArgs","length","every","entryArg","index","results","slice","wait","duration","Promise","resolve","setTimeout","makeClamp","min","Number","MAX_VALUE","max","n","getDayOfEpoch","Function","prototype","call","bind","Array","date","Date","tsAdjustment","getTimezoneOffset","timestamp","getTime","Math","floor","rxThaiNonFullWidthCharacters","getFullWidthCharacters","word","replace","sortBySimilarity","target","property","words","needle","filter","map","similarity","Levenshtein","get","sort","a","b","arr","findIndex","otherWord","shuffle","tmp","rnd","random","arraysAreSimplyEqual","aItem","buildRandomizedValuesQueue","cycleCount","values","lastInsert","newInsert","queue","i","concat","stages","getUniqueValues","value","indexOf","makeUniqueRandomSamplingIncludingValue","allValues","uniqueValues","requiredValue","availableValues","splice","loadWords","fetch","response","json","loadVowels","vowels","loadConsonants","loadProgressData","localforage","getItem","progress","saveProgressData","setItem","resetProgressData","removeItem","loadVoices","voiceSettings","englishVoiceName","thaiVoiceName","rate","saveVoices","loadSettings","settings","pronunciationType","practiceWordLimit","testingWordLimit","practiceOrder","practiceAllAtOnce","showCharacterClasses","saveSettings","existingSettings","loadTones","deserializeWord","id","term","thai","ipa","paiboon","altThai","getWords","STAGES","sleep","MAX_SAFE_INTEGER","clamp5","applyDelta","clamp","delta","val","createApplyDeltaWithLimits","generateDueDateByAspects","aspectScores","deserializeProgress","dueDate","hasProgress","undefined","serializeProgress","getProgress","all","progressData","wordData","progressItem","resetWords","saveProgress","progressItems","applyScoresToWords","scores","item","forEach","aspect","score","advance","updateWordAspect","getOutstandingWords","aMin","bMin","getCurrentPracticeWords","refreshPracticeWords","limit","currentWords","pendingWords","w","getRoughStatus","day","filterByRoughStatus","status","includes","updateProgress","prop","defaultState","resetProgressVisible","operations","changePracticeDisplayOrder","dispatch","type","payload","changePronunciationType","changePracticeWordLimit","changeTestingWordLimit","initializeSettings","toggleCharacterClasses","getState","toggleResetProgress","resetProgress","mergeById","carry","firstMatch","o","getRandomQueue","testWords","stage","isComplete","isSaved","clearTest","getCurrentWords","getOverdueWords","setTestType","fill","startCustomTest","self","submitAnswer","correct","test","saveTest","updatedWords","createQueue","currentIndex","currentStage","initializeWordsManager","seedPractice","advancePractice","direction","nudgePractice","shouldJustAdvance","advanceSound","nudgeSound","closePractice","registerPracticeEnd","count","applicationReady","currentView","hintVisible","subview","previewFilter","changeSubview","setApplicationReady","toggleHint","togglePreviewFilterStatus","LANGUAGE_THAI","thaiVoices","thaiVoice","englishVoices","englishVoice","name","findVoice","voices","newVoiceName","setThaiVoice","setEnglishVoice","setRate","newRate","say","language","cancelCurrent","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","lang","voice","text","onend","speak","isPronunciation","PropTypes","shape","string","isRequired","getAll","initializeVoiceManager","processVoices","rxEnglishVoiceTest","rxThaiVoiceTest","allVoices","getVoices","onvoiceschanged","vowelsLoaded","visibleVowel","consonantsLoaded","confusionLoaded","consonants","confusions","consonantKeys","visibleConsonantKey","visibleConfusion","makeMoveVowel","currentVowel","sounds","vowel","showNextVowel","showPrevVowel","getConsonants","keyNames","s","split","current","consonant","x","y","push","initializeVowels","data","clearSounds","showVowel","initializeConsonants","showConsonantsByKey","showConfusionByIndex","initializeConfusion","rxZeroWidth","rxFindClass","RegExp","rxMid","rxHigh","reducer","components","character","pop","lastCharacter","toneClass","exec","lowMatch","midMath","highMatch","getCachedCompents","input","getTone","cls","ending","marker","isMid","getTonesByStage","tones","label","className","last","tonesmap","stringToClass","low","mid","high","stringToLength","long","short","stringToEnding","stop","sonorant","stringToMarker","ek","tho","tri","chattawa","initializeTones","examples","buildTestSummaryString","summary","buildTestStartString","eventsMap","trackPageView","action","location","trackEvent","category","debounceEvent","middleware","createMiddleware","GoogleAnalyticsGtag","trackRouteChange","path","trackStartPracticeType","rootReducer","combineReducers","view","state","practiceWords","pronunciation","trackingMiddleware","thunk","rootEnhancer","compose","applyMiddleware","store","createStore","viewOperations","voiceOperations","settingsOperations","wordOperations","testOperations","soundsOperations","tonesOperations","trackingOperations","ScrollReset","prev","this","props","window","scrollTo","children","Component","withRouter","Loading","urlToTitle","url","BreadcrumbsItem","pathname","title","isExact","to","component","MainNavigation","BasicNavigation","ConsonantNavigation","ToneNavigation","ToggleHeader","onClick","selected","PlayButton","play","evt","stopPropagation","blur","ProgressIcon","percentage","strokeWidth","styles","background","stroke","trail","ProgressItem","showProgress","getPronunciation","WordsTable","items","visibleWords","defaultProps","connect","getFilteredWordsList","Progress","VoiceButton","disabled","VoiceSelector","selectedVoice","onSelectVoice","heading","buttons","RateSelector","v","onChange","step","round","PronunciationSample","goodWords","makeClickableHeader","isDisabled","PronunciationSelector","sampleWords","samplesClassName","href","getItemStyle","isDragging","draggableStyle","userSelect","padding","grid","margin","color","textAlign","DragDropSorter","onDragEnd","source","destination","order","sourceIndex","destinationIndex","el","result","moveArrayItem","droppableId","isDropDisabled","provided","snapshot","ref","innerRef","style","isDraggingOver","borderWidth","borderStyle","borderColor","width","childOrder","draggableId","isDragDisabled","draggableProps","dragHandleProps","PracticeOrderSelector","checked","htmlFor","RangedNumberSelector","Thai","classIndex","CharacterClassToggle","onToggle","ResetProgress","modalClassNames","modal","visible","Settings","Preview","showPreview","Line","isThai","contents","classes","playButton","Card","lines","nextButton","card","Hint","hint","CardContainer","cardsSeen","onKey","document","addEventListener","prevProps","removeEventListener","code","CSSTransition","timeout","TransitionGroup","Practice","params","getCount","outstandingWords","masteredWords","getMasteredWords","outstandingCount","currentCount","masteredCount","TestSelector","Question","getClass","isAnswered","Answer","onSelect","Advancement","defaultButtonRef","createRef","focus","isCorrect","isLastQuestion","stageTestTargets","question","answer","keyToProperty","Challenge","answers","selectedAnswer","setState","correctAnswer","visibleAnswers","PureComponent","Quiz","Score","getStyle","getText","Item","TestResult","testWord","TestResults","Test","history","Examples","example","Vowel","onNext","onPrev","VowelButton","Vowels","texts","next","rest","sayWords","sortKeys","getSortedKeys","consontantKeys","CategoryPicker","headings","visibleConsonants","ConsonantList","ColorizedThai","Consonants","ConfusionPicker","confusion","ConfusionDetail","confusedConsonants","DrillAnswer","mistakes","possibleAnswer","incorrect","makeQueue","DIRECTION_MAP","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","getPossibleAnswers","Drill","parseInt","consonantsToDrill","char","currentConsonant","possibleAnswers","waiting","selectAnswer","Confusion","isNaN","getCharacterClass","highlightedCharacters","some","c","ReviewCharacter","highlight","onMouseOver","onMouseOut","OutboundLink","preventDefault","open","leave","buildCharacterList","characters","Review","set","busy","correctItem","hiddenItems","mistakesMade","stageComplete","reseed","currentCharacter","availableCharacters","checkAnswer","labels","getAnswer","ProgressBar","lowChars","midChars","highChars","ConsonantClasses","DrillButtons","changeLabel","onHover","descriptorsList","getTonesDescriptors","focusedStage","changeFocus","tableClasses","filtered","colSpan","role","aria-label","randomize","mistakeMake","currentQueue","tone","delayTime","ToneRules","Tracking","NotFound","App","then","exact","NavigationBasics","TonesNavigation","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ca68bd9f.chunk.js","sourcesContent":["import Levenshtein from 'fast-levenshtein';\nexport const classNames =  (obj) => {\n\treturn Object.keys(obj)\n\t\t.reduce((strings, key) => obj[key] ? [...strings, key]: strings, [])\n\t\t.join(' ');\n};\n\nexport const memoize = (fn, size = 3) => {\n    let cache = [];\n\n    return (...args) => {\n        let match = cache.find(({args: cachedArgs}) => cachedArgs.length === args.length && cachedArgs.every((entryArg, index) => entryArg === args[index]));\n\n        if (match) return match.results;\n\n        let results = fn(...args);\n        cache = [{args, results}, ...cache.slice(0, size - 1)];\n\n        return results;\n    };\n};\n\nexport const wait = duration => new Promise(resolve => setTimeout(resolve, duration));\n\nexport const makeClamp = (min = -Number.MAX_VALUE, max = Number.MAX_VALUE) => n => n < min ? min : n > max ? max : n;\n\nconst slice = Function.prototype.call.bind(Array.prototype.slice);\n\nexport const pipe = (...args) => {\n    if (args.length === 0) { throw new Error('at least one argument required'); }\n\n    var f0 = args[0];\n    var fRem = slice(args, 1);\n\n    return function () {\n        return fRem.reduce(function (acc, next) {\n            return next(acc);\n        }, f0.apply({}, args));\n    };\n};\n\nexport const makeExclude = equality => (arr1, arr2) => arr1.filter(v1 => arr2.some(v2 => equality(v1, v2)) === false);\n\n/**\n * Converge a list of functions to the arguments of a core function (similar to compose)\n * @param {function} core The function to be decorated\n * @param {function[]} pipedFunctions The functions to be applied to each respective argument\n * @returns {function} Returns a function whose arguments will be piped through each respective pipedFunction before being executed via the core function\n */\nexport const converge = (f, fs) => (...args) => f(...args.map((a, i) => fs[i](a)));\n\n/**\n * Compose a list of functions to the arguments of a core function\n * @param {function} core The funtion to be decorated\n * @param {function[]} pipedFunctions The functions to be applied to each respective argument of the core function\n * @returns {function}\n */\nexport const compose = (f, ...fns) => (...args) => f(...fns.map((fn, i) => fn(args[i])));\n\nexport const identity = v => v;\n\nexport const createApplyDeltaWithLimits = (min, max) => {\n    const clamp = makeClamp(min, max);\n\n    return (arr, index, delta) => {\n\t\tif (index < arr.length) {\n\t\t\tlet val = arr[index];\n\t\t\tval = clamp(val + delta);\n\t\t\treturn [...arr.slice(0, index), val, ...arr.slice(index + 1)];\n\t\t}\n\t\treturn arr;\n\t};\n};\n\n\n/**\n * Calculates the number of days since the \"start of day\" (4am) on Jan1 1970\n * @param {Date} date object having two methods: getTimezoneOffset and getTime\n * @returns { Number } The number of days since 4am on the start of the epoch\n */\nexport const getDayOfEpoch = (date = new Date()) => {\n    // tsAdjustment is the number of ms difference between local time and UTC\n    const tsAdjustment = date.getTimezoneOffset() * 60000;\n\n    // timestamp is the number of ms since 1Jan1970 in the local timezone\n    const timestamp = date.getTime() - tsAdjustment;\n\n    //     Math.floor((timestamp - fourAM)) / twentyfourHours)\n    return Math.floor((timestamp - 14400000) / 86400000);\n};\n\nconst rxThaiNonFullWidthCharacters = /[^กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะาำเแโใไๅๆ๏๐๑๒๓๔๕๖๗๘๙๚๛a-z ]/;\nconst getFullWidthCharacters = word => word.replace(rxThaiNonFullWidthCharacters, '');\n\nexport const sortBySimilarity = (target, property, words) => {\n\tconst needle = getFullWidthCharacters(target[property]);\n\n    return words\n        .filter(word => word[property] !== target[property])\n\t\t.map(word => ({ word, similarity: Levenshtein.get(needle, getFullWidthCharacters(word[property]) )}))\n\t\t.sort((a, b) => a.similarity > b.similarity ? 1 : -1)\n\t\t.map(({word}) => word)\n\t\t.filter((word, index, arr) => arr.findIndex(otherWord => word[property] === otherWord[property]) === index);\n};\n\nexport const shuffle = (arr) => {\n    // Implements Knuth shuffle algorithm\n    arr = arr.slice();\n\n    let index = arr.length;\n    let tmp;\n    let rnd;\n\n    while (index > 0) {\n        rnd = Math.floor(Math.random() * index);\n        index -= 1;\n        tmp = arr[index];\n        arr[index] = arr[rnd];\n        arr[rnd] = tmp;\n    }\n\n    return arr;\n};\n\nexport const arraysAreSimplyEqual = (a, b) => a.length === b.length && a.every((aItem, index) => aItem === b[index]);\n\nexport const buildRandomizedValuesQueue = cycleCount => values => {\n    let queue = [];\n    let length = values.length;\n    let lastInsert;\n    let newInsert;\n\n    for (let i = 0; i < cycleCount; i++) {\n        lastInsert = queue.slice(-length);\n\n        if (length < 3) {\n            newInsert = [].concat(values);\n        } else {\n            do {\n                newInsert = shuffle(values);\n            } while (\n                (newInsert[0] === lastInsert[length - 1])\n                || (i === cycleCount - 1 && queue[0] === newInsert[length - 1])\n                || arraysAreSimplyEqual(lastInsert, newInsert)\n            );\n        }\n\n        queue = [].concat(queue, newInsert);\n    }\n\n    return queue;\n};\n\n/**\n * Moves an item of an array from one index to a new index\n * @param {any[]} arr The array to be changed\n * @param {Number} sourceIndex The index of the item that will be moved\n * @param {Number} destinationIndex The new index that the moved item will occupy\n * @returns {any[]} A new array in the desired order\n */\nexport function moveArrayItem(arr, sourceIndex, destinationIndex) {\n    const el = arr[sourceIndex];\n    if (el === undefined) return [...arr];\n\n    destinationIndex = destinationIndex < 0 ? 0 : destinationIndex;\n\n    const result = [...arr.slice(0, sourceIndex), ...arr.slice(sourceIndex + 1)];\n    return [...result.slice(0, destinationIndex), el, ...result.slice(destinationIndex)];\n}\n\n/**\n * Makes a function that merges two arrays of objects, replacing items from the first array if necessary, using the provided property name\n * @param {string} prop The name by which the two arrays are to be merged\n * @returns {function} A function that merges two arrays by the expected property name\n */\nexport const createMergeObjectArrayByProperty = prop => (a, b) => {\n    return a.concat(b).reduce((carry, item, index, arr) => {\n        let val = item[prop];\n        let firstMatch = arr.findIndex(o => o[prop] === val);\n\n        if (firstMatch !== index) return [ ...carry.slice(0, firstMatch), item, ...carry.slice(firstMatch + 1) ];\n        else return [ ...carry, item ];\n    }, []);\n};\n\nexport const getUniqueValues = values => values.filter((value, index, arr) => arr.indexOf(value) === index);\n\nexport const makeUniqueRandomSamplingIncludingValue = (allValues, length) => {\n    const uniqueValues = getUniqueValues(allValues);\n\n    return requiredValue => {\n        let availableValues = shuffle(uniqueValues.filter(value =>  value !== requiredValue));\n        availableValues.splice(Math.floor(Math.random() * length), 0, requiredValue);\n        return availableValues.slice(0, length);\n    };\n};\n\nexport const makeFilterByProps = items => props => items.filter(item => Object.keys(props).every(prop => props[prop].some(propsProp => item[prop] === propsProp || (propsProp === null && item[prop] === undefined))));","import { getWords } from './WordManager';\nimport { loadProgressData, saveProgressData } from './Persistence';\nimport { createApplyDeltaWithLimits, makeClamp, getDayOfEpoch } from './Utils';\n\nexport const STAGES = [\n    { sleep: 0 },\n    { sleep: 1 },\n    { sleep: 3 },\n    { sleep: 7 },\n    { sleep: 13 },\n    { sleep: Number.MAX_SAFE_INTEGER }\n];\nexport const ASPECT_READ = 0;\nexport const ASPECT_COMPREHENSION = 1;\nexport const ASPECT_TRANSLATE = 2;\n\nexport const STATUS_NONE = 0;\nexport const STATUS_PRACTICE = 1;\nexport const STATUS_OVERDUE = 2;\nexport const STATUS_WAITING = 3;\nexport const STATUS_MASTERED = 4;\n\nexport const TEST_TYPEOVERDUE = 0;\nexport const TEST_TYPECURRENT = 1;\nexport const TEST_STAGE1 = 0;\n\nconst clamp5 = makeClamp(0, 5);\nconst applyDelta = createApplyDeltaWithLimits(0, 5);\n\nexport const createDueDateGeneratorForAspects = (stages) => (date, aspectScores) => date + stages[clamp5(Math.min(...aspectScores))].sleep;\n\nconst generateDueDateByAspects = createDueDateGeneratorForAspects(STAGES);\n\nconst deserializeProgress = ([id, date, dueDate, aspectScores]) => ({ id, date, dueDate, aspectScores });\nconst hasProgress = ({ date, dueDate, aspectScores }) => (date !== undefined && dueDate !== undefined && aspectScores !== undefined);\nconst serializeProgress = ({ id, date, dueDate, aspectScores }) => ([id, date, dueDate, aspectScores]);\nconst getProgress = words => words.filter(hasProgress).map(serializeProgress);\n\n/**\n * Loads words from static file, progress data from local storage and merges all data into an array of words\n */\nexport async function loadWords() {\n    let [progressData, wordData] = await Promise.all([\n        loadProgressData(),\n        getWords()\n    ]);\n\n    let progress = progressData.map(deserializeProgress);\n    return wordData.map(word => {\n        let progressItem = progress.find(({id}) => id === word.id);\n        if (progressItem) return { ...progressItem, ...word };\n        return word;\n    });\n}\n\nexport function resetWords(words) {\n    return words.map(word => ({ ...word, aspectScores: undefined, date: undefined, dueDate: undefined }));\n}\n\n/**\n * Saves the current progress information for a list of words\n * @param {Object[]} words Array of words containing optional progress data\n */\nexport async function saveProgress(words) {\n    const progressItems = getProgress(words);\n    await saveProgressData(progressItems);\n}\n\n/**\n * Given a word, the aspect tested and the result, returns a new word object having updated aspect properties\n * @param {Array} aspectScores The scores derived from each type of question\n * @param {Number} aspect The index of the number in the array that will be modified\n * @param {Boolean} advance If true, the number at aspect index will be advanced. If negative, it will be rewound\n * @returns {Object} Returns a new word having its aspect array replaced\n */\nexport function updateWordAspect(aspectScores=[0, 0], aspect, advance) {\n    return applyDelta(aspectScores, aspect, advance ? 1 : -1);\n}\n\n/**\n * Applies the scores to a list of words. Scores are an array of objects having this shape:\n *\n *     { id {Number}, aspect {Number}, score{Number[] } }\n *\n * where id is the word id, aspect is the index of the tested property and the score is either 1 (pass) or -1 (fail)\n * @param {Number[]} scores An array of numbers representing the test score for each aspect of a given word\n * @param {Object[]} words An array of word data to have progress applied to\n * @returns A new list of words with the latest applied progress information\n */\nexport function applyScoresToWords(scores, words, date) {\n    date = getDayOfEpoch(date || new Date());\n    return words.map(word => {\n        let { id, aspectScores } = word;\n        let items = scores.filter(item => item.id === id);\n\n        items.forEach(({ aspect, score }) =>  aspectScores = updateWordAspect(aspectScores, aspect, score > 0));\n\n        const dueDate = generateDueDateByAspects(date, aspectScores);\n\n        return { ...word, aspectScores, date, dueDate };\n    });\n}\n\n/**\n * Gets all words that have been mastered\n * @param {Object[]} words An array of word objects having optional progress data\n * @returns {Object[]} All words having been mastered\n */\nexport function getMasteredWords(words) {\n    return words.filter(({ aspectScores=null }) => aspectScores !== null && Math.min(...aspectScores) > 4);\n}\n\n/**\n * Gets all words due to be tested as of a provided date\n * @param {Object[]} words An array of word objects having optional progress data\n * @param {Number} date The day of the epoch\n * @returns {Object[]} A new list of words\n */\nexport function getOutstandingWords(words, date) {\n    const filter = ({ dueDate, aspectScores }) => dueDate <= date && Math.min(...aspectScores) > 0 && Math.min(...aspectScores) <= 4;\n    const sorter = (a, b) => {\n        if (a.dueDate !== b.dueDate) return a.dueDate > b.dueDate ? 1 : -1;\n\n        let aMin = Math.min(...a.aspectScores);\n        let bMin = Math.min(...b.aspectScores);\n        if (aMin !== bMin) return aMin < bMin ? 1 : -1;\n\n        if (a.date !== b.date) return a.date > b.date ? 1 : -1;\n\n        return a.id > b.id ? 1 : -1;\n    };\n\n    return words.filter(filter).sort(sorter);\n}\n\n/**\n * Gets all words currently being praticed\n * @param {Object[]} words The words to be searched\n * @returns {Object[]} The words that are currently being practiced\n */\nexport function getCurrentPracticeWords(words) {\n    const filter = ({ aspectScores }) => Math.min(...aspectScores) === 0;\n    return words.filter(hasProgress).filter(filter);\n}\n\n/**\n * Fetch a new list of words to practice (can return more than `limit` if more than `limit` cards\n * were previously selected for study)\n * @param {Object[]} words All words\n * @param {Number} limit The ideal number of words to include\n * @param {Number} date The epoch day by which the practice words should be defined\n * @returns {Object[]} A list of card objects for study\n */\nexport function refreshPracticeWords(words, limit, date) {\n    const filterCurrent = ({ aspectScores=null }) => aspectScores !== null && Math.min(...aspectScores) === 0;\n    let currentWords = words.filter(filterCurrent);\n\n    const filterPending = ({ aspectScores=null}) => aspectScores === null;\n    let pendingWords = words\n        .filter(filterPending)\n        .map(w => ({ ...w, date, dueDate: date, aspectScores: [0, 0]}));\n\n    return [...currentWords, ...pendingWords].slice(0, limit);\n}\n\n/**\n * Add a word to a practice deck\n * @param {Object[]} words Array of words currently selected for practice\n * @param {Object} word Word to be added\n * @param {Number} date The day index\n * @returns {Object[]} New list of words\n */\nexport function addPracticeWord(words, word, date) {\n    return [ ...words, { ...word, date, dueDate: date, aspectScores: [0, 0] } ];\n}\n\n/**\n * Removes a word from a practice deck\n * @param {Object[]} words Array of words current selected for practice\n * @param {Object} word Word to be removed\n * @returns {Object[]} New list of words\n */\nexport function removePracticeWord(words, word) {\n    return words.filter(({ id }) => id !== word.id);\n}\n\n/**\n * Get the \"rough\" status of a word\n * @param {Object} word The word to be tested, having an optional due date and aspect scores\n * @param {Number} day The day number against which the due date is to be compared\n * @returns {Number} Returns one of: STATUS_NONE, STATUS_ACTIVE, STATUS_WAITING or STATUS_MASTERED\n */\nexport function getRoughStatus({ dueDate, aspectScores }, day) {\n    if (!aspectScores) return STATUS_NONE;\n    if (Math.min(...aspectScores) === 0) return STATUS_PRACTICE;\n    if (Math.min(...aspectScores) >= 5) return STATUS_MASTERED;\n    if (dueDate <= day) return STATUS_OVERDUE;\n    return STATUS_WAITING;\n}\n\n/**\n * Organize a list of words into groups by their status\n * @param {Object[]} words The words to be reduced\n * @param {Number} day The day number against which the due date is to be compared\n * @returns {Object[]} Returns words organised into groups of overdue, waiting, mastered, practiced and waiting\n */\nexport function organizeByRoughStatus(words, day) {\n    return words.reduce((statuses, word) => {\n        let status = getRoughStatus(word, day);\n        statuses[status].push(word);\n        return statuses;\n    }, [[], [], [], [], []]);\n}\n\n/**\n * Gets a list of words filtered by their rough status\n * @param {Object[]} words The words to be filtered\n * @param {Number} day The epoch day by which the status should be determined\n * @param {Number[]} filter The status values to be included in the filtering\n * @returns {Object[]} filtered words\n */\nexport function filterByRoughStatus(words, day, filter=[]) {\n    return words\n        .map(word => ({ word, status: getRoughStatus(word, day )}))\n        .filter(({ status }) => filter.includes(status))\n        .map(({ word }) => word);\n}\n\n/**\n * Build an updated words list\n * @param {Object[]} words Existing list of words\n * @param {Object[]} queue List of words that may contain updated\n * @returns {Object[]} An updated list of words with any content from queue\n */\nexport function updateProgress(words, queue) {\n    return words.map(w => queue.find((({id}) => id === w.id)) || w);\n}","import localforage from 'localforage';\n\nexport const init = () => {\n    localforage.config({\n        name: 'thai2',\n        storeName: 'persistentStore',\n        description: 'Persistent store for settings and progress for Spoken Thai Flashcards'\n    });\n};\n\nexport const loadWords = async () => {\n    let response = await fetch('/data/allwords.json');\n    let words = await response.json();\n    return words;\n};\n\nexport const loadVowels = async () => {\n    let response = await fetch('/data/vowels.json');\n    let vowels = await response.json();\n    return vowels;\n};\nexport const loadConsonants = async () => {\n    let response = await fetch('/data/consonants.json');\n    let vowels = await response.json();\n    return vowels;\n};\nexport const loadProgressData = async () => {\n    const progress = await localforage.getItem('progress');\n    return progress || [];\n};\nexport const saveProgressData = async (progress) => {\n    await localforage.setItem('progress', progress);\n};\nexport const resetProgressData = async () => {\n    await localforage.removeItem('progress');\n};\n\nexport const loadVoices = async () => {\n    const voiceSettings = await localforage.getItem('voiceSettings');\n    let { englishVoiceName = null, thaiVoiceName = null, rate = 1 } = voiceSettings || {};\n    return { englishVoiceName, thaiVoiceName, rate };\n};\n\nexport const saveVoices = async (voiceSettings) => {\n    await localforage.setItem('voiceSettings', voiceSettings);\n};\n\nexport const loadSettings = async () => {\n    let settings = await localforage.getItem('settings');\n    let { pronunciationType, practiceWordLimit, testingWordLimit, practiceOrder, practiceAllAtOnce, showCharacterClasses } = settings || {};\n    return { pronunciationType, practiceWordLimit, testingWordLimit, practiceOrder, practiceAllAtOnce, showCharacterClasses };\n};\n\nexport const saveSettings = async (settings) => {\n    let existingSettings = await localforage.getItem('settings');\n    await localforage.setItem('settings', { ...existingSettings, ...settings });\n};\n\nexport const loadTones = async () => {\n    let response = await fetch('/data/tones.json');\n    let words = await response.json();\n    return words;\n};\n","import { loadWords } from './Persistence';\n\nexport const PRONUNCIATIONTYPE_IPA = 'IPA';\nexport const PRONUNCIATIONTYPE_PAIBOON = 'Paiboon';\n\nexport const deserializeWord = ([id, term, thai, ipa, paiboon,altThai=null]) => ({id, term, thai, ipa, paiboon, altThai});\nexport const getWords = async () => {\n    let words = await loadWords();\n    return words.map(deserializeWord);\n};","import { loadSettings, saveSettings, resetProgressData, } from '../services/Persistence';\nimport { PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON } from '../services/WordManager';\n\nexport const SETTINGS_INITIALIZE = 'settings/initialize';\nexport const SETTINGS_SETPRONUNCIATIONTYPE = 'settings/setpronunciationtype';\nexport const SETTINGS_SETPRACTICELIMIT = 'settings/setpracticelimit';\nexport const SETTINGS_SETTESTLIMIT = 'settings/settestlimit';\nexport const SETTINGS_SETPRACTICEDISPLAYORDER = 'settings/setpracticedisplayorder';\nexport const SETTINGS_RESETPROGRESS = 'settings/resetprogress';\nconst SETTINGS_TOGGLEALLATONCE = 'settings/toggleallatonce';\nconst SETTINGS_TOGGLECHARACTERCLASSES = 'settings/togglecharacterclasses';\nconst SETTINGS_TOGGLERESETPROGRESS = 'settings/toggleresetprogress';\n\nconst defaultState = {\n    pronunciationType: PRONUNCIATIONTYPE_IPA,\n    practiceWordLimit: 15,\n    testingWordLimit: 20,\n    practiceOrder: ['thai', 'pronunciation', 'term'],\n    practiceAllAtOnce: false,\n    showCharacterClasses: true,\n    resetProgressVisible: false,\n};\n\nexport const reducer = (state=defaultState, { type, payload }) => {\n    switch(type) {\n        case SETTINGS_INITIALIZE:\n        case SETTINGS_SETPRACTICELIMIT:\n        case SETTINGS_SETTESTLIMIT:\n        case SETTINGS_SETPRACTICEDISPLAYORDER:\n        case SETTINGS_TOGGLEALLATONCE:\n        case SETTINGS_TOGGLECHARACTERCLASSES:\n        case SETTINGS_TOGGLERESETPROGRESS:\n        case SETTINGS_RESETPROGRESS:\n        return { ...state, ...payload };\n\n        case SETTINGS_SETPRONUNCIATIONTYPE:\n        return { ...state, pronunciationType: payload === PRONUNCIATIONTYPE_IPA ? PRONUNCIATIONTYPE_IPA : PRONUNCIATIONTYPE_PAIBOON };\n\n        default:\n        return state;\n    }\n};\n\nconst changePronunciationType = (pronunciationType=null) => dispatch => {\n    dispatch({ type: SETTINGS_SETPRONUNCIATIONTYPE, payload: pronunciationType });\n    saveSettings({ pronunciationType });\n};\nconst changePracticeDisplayOrder = ({practiceOrder, practiceAllAtOnce }) => dispatch => {\n    if (practiceOrder) {\n        dispatch({ type: SETTINGS_SETPRACTICEDISPLAYORDER, payload: { practiceOrder } });\n        saveSettings({ practiceOrder });\n    }\n    else {\n        dispatch({ type: SETTINGS_TOGGLEALLATONCE, payload: { practiceAllAtOnce } });\n        saveSettings({ practiceAllAtOnce });\n    }\n};\nconst initializeSettings = () => async dispatch => {\n    let {\n        practiceWordLimit=defaultState.practiceWordLimit,\n        pronunciationType=defaultState.pronunciationType,\n        practiceAllAtOnce=defaultState.practiceAllAtOnce,\n        practiceOrder=defaultState.practiceOrder,\n        showCharacterClasses=defaultState.showCharacterClasses,\n        testingWordLimit=defaultState.testingWordLimit,\n    } = await loadSettings();\n    dispatch({ type: SETTINGS_INITIALIZE, payload: { practiceWordLimit, practiceAllAtOnce, practiceOrder, pronunciationType, showCharacterClasses, testingWordLimit } });\n};\nconst changePracticeWordLimit = practiceWordLimit => dispatch => {\n    dispatch({ type: SETTINGS_SETPRACTICELIMIT, payload: { practiceWordLimit }});\n    saveSettings({ practiceWordLimit });\n};\nconst changeTestingWordLimit = testingWordLimit => dispatch => {\n    dispatch({ type: SETTINGS_SETTESTLIMIT, payload: { testingWordLimit }});\n    saveSettings({ testingWordLimit });\n};\nconst toggleCharacterClasses = () => (dispatch, getState) => {\n    let showCharacterClasses = getState().settings.showCharacterClasses === false;\n    dispatch({ type: SETTINGS_TOGGLECHARACTERCLASSES, payload: { showCharacterClasses }});\n    saveSettings({ showCharacterClasses });\n};\nconst toggleResetProgress = () => (dispatch, getState) => {\n    let resetProgressVisible = getState().settings.resetProgressVisible === false;\n    dispatch({ type: SETTINGS_TOGGLERESETPROGRESS, payload: { resetProgressVisible } });\n};\nconst resetProgress = () => async dispatch => {\n    await resetProgressData();\n    dispatch({ type: SETTINGS_RESETPROGRESS, payload: { resetProgressVisible: false }});\n};\n\nexport const operations = {\n    changePracticeDisplayOrder,\n    changePronunciationType,\n    changePracticeWordLimit,\n    changeTestingWordLimit,\n    initializeSettings,\n    toggleCharacterClasses,\n    toggleResetProgress,\n    resetProgress,\n};","import { getDayOfEpoch, buildRandomizedValuesQueue, createMergeObjectArrayByProperty } from '../services/Utils';\nimport { getOutstandingWords, getCurrentPracticeWords, applyScoresToWords, saveProgress } from '../services/Leitner';\n\nimport { TEST_TYPECURRENT, TEST_STAGE1 } from '../services/Leitner';\n\nconst mergeById = createMergeObjectArrayByProperty('id');\n\nexport const TEST_SETTESTTYPE = 'test/settesttype';\nexport const TEST_COMPLETETEST = 'test/completetest';\nexport const TEST_SAVED = 'test/saved';\nconst TEST_SETTESTWORDS = 'test/settesetwords';\nconst TEST_ACCEPTANSWER = 'test/acceptanswer';\nconst TEST_CLEARALL = 'test/clearall';\n\nconst getRandomQueue = buildRandomizedValuesQueue(2);\n\nconst defaultState = {\n    testWords: [],\n    queue: [],\n    scores: [],\n    type:  null,\n    stage: null,\n    isComplete: false,\n    isSaved: false,\n    index: null,\n};\n\nexport const reducer = (state = defaultState, { type, payload }) => {\n    if (type === TEST_ACCEPTANSWER) return { ...state, ...payload };\n    if (type === TEST_SETTESTWORDS) return { ...state, ...payload, stage: 0, index: 0 };\n    if (type === TEST_SETTESTTYPE) return { ...state, ...payload };\n    if (type === TEST_COMPLETETEST) return { ...state, ...payload, isComplete: true };\n    if (type === TEST_SAVED) return { ...state, isSaved: true };\n    if (type === TEST_CLEARALL) return { ...state, ...defaultState };\n\n    return state;\n};\n\nconst clearTest = () => dispatch => {\n    dispatch({ type: TEST_CLEARALL });\n};\nconst getCurrentWords = (words) => dispatch => {\n    const testWords = getCurrentPracticeWords(words);\n    const queue = getRandomQueue(testWords);\n    dispatch({ type: TEST_SETTESTWORDS, payload: {testWords, queue} });\n    return testWords.length > 0;\n};\nconst getOverdueWords = (words) => dispatch => {\n    const testWords = getOutstandingWords(words, getDayOfEpoch(new Date()));\n    const queue = getRandomQueue(testWords);\n    dispatch({ type: TEST_SETTESTWORDS, payload: {testWords, queue} });\n    return testWords.length > 0;\n};\nconst setTestType = (type) => (dispatch, getState) => {\n    const stage = TEST_STAGE1;\n    const index = 0;\n    const { words: { words }, settings: { testingWordLimit }} = getState();\n\n    const testWords = (type === TEST_TYPECURRENT ? getCurrentPracticeWords(words) : getOutstandingWords(words, getDayOfEpoch())).slice(0, testingWordLimit);\n    const queue = getRandomQueue(testWords);\n    const scores = new Array(queue.length).fill(0);\n\n    dispatch({ type: TEST_SETTESTTYPE, payload: { type, testWords, queue, stage, index, scores } });\n    return queue.length > 0;\n};\nconst submitAnswer = (correct) => (dispatch, getState) => {\n    let { test: { index, queue, scores, stage, testWords } } = getState();\n    const score = correct === null ? 0 : correct ? 1 : -1;\n    scores = [...scores.slice(0, index), { id: queue[index].id, score, aspect: stage }, ...scores.slice(index + 1)];\n    index += 1;\n    stage = Math.floor(index / testWords.length);\n\n    if (index < scores.length) dispatch({ type: TEST_ACCEPTANSWER, payload: { scores, index, stage }});\n    else dispatch({ type: TEST_COMPLETETEST, payload: { scores }});\n};\nconst startCustomTest = words => dispatch => {\n    const stage = TEST_STAGE1;\n    const type = TEST_TYPECURRENT;\n    const index = 0;\n\n    const testWords = words.filter((word, index, self) => self.indexOf(word) === index);\n    const queue = getRandomQueue(testWords);\n    const scores = new Array(queue.length).fill(0);\n\n    dispatch({ type: TEST_SETTESTTYPE, payload: { type, testWords, queue, stage, index, scores } });\n};\nconst saveTest = (scores) => async (dispatch, getState) => {\n    let { words: { words }, test: { testWords } } = getState();\n\n    const updatedWords = applyScoresToWords(scores, testWords);\n\n    words = mergeById(words, updatedWords);\n    await saveProgress(words);\n\n    dispatch({ type: TEST_SAVED, payload: words });\n};\n\nexport const operations = {\n    clearTest,\n    getCurrentWords,\n    getOverdueWords,\n    setTestType,\n    startCustomTest,\n    submitAnswer,\n    saveTest,\n};","import { buildRandomizedValuesQueue, getDayOfEpoch } from '../services/Utils';\nimport { loadWords, refreshPracticeWords, updateProgress, saveProgress, resetWords } from '../services/Leitner';\nimport { SETTINGS_RESETPROGRESS } from './settings';\nimport { TEST_SAVED } from './tests';\nconst createQueue = buildRandomizedValuesQueue(5);\n\nexport const WORDS_SETWORDS = 'words/setwords';\nexport const WORDS_CLOSEPRACTICE = 'words/closepractice';\nexport const WORDS_REGISTERPRACTICEEND = 'words/registerpracticeend';\nconst WORDS_ADVANCE = 'words/advance';\nconst WORDS_NUDGE = 'words/nudge';\nconst WORDS_ADVANCESOUND = 'words/advancesound';\nconst WORDS_NUDGESOUND = 'words/nudgesound';\nconst WORDS_RESEED = 'words/reseed';\n\nconst defaultState = {\n    currentIndex: 0,\n    currentStage: 0,\n    queue: [],\n    words: [],\n};\n\nexport const reducer = (state = defaultState, { type, payload }) => {\n    if (type === WORDS_ADVANCE) {\n        const delta = payload === -1 ? -1 : 1;\n        const length = state.queue.length;\n        let currentIndex = (state.currentIndex + length + delta) % length;\n        return { ...state, currentIndex, currentStage: 0 };\n    }\n    if (type === WORDS_NUDGE) {\n        if (state.currentStage < 2) return { ...state, currentStage: state.currentStage + 1 };\n        const length = state.queue.length;\n        let currentIndex = (state.currentIndex + length + 1) % length;\n        return { ...state, currentIndex, currentStage: 0 };\n    }\n    if (type === WORDS_NUDGESOUND) {\n        if (state.currentStage === 0) return { ...state, currentStage: 1 };\n\n        const length = state.queue.length;\n        return { ...state, currentIndex: (state.currentIndex + 1 + length) % length, currentStage: 0 };\n    }\n    if (type === WORDS_ADVANCESOUND) {\n        const length = state.queue.length;\n\n        if (payload === -1) return { ...state, currentIndex: (state.currentIndex + length - 1) % length, currentStage: 0 };\n        return { ...state, currentIndex: (state.currentIndex + length + 1) % length, currentStage: 0 };\n    }\n    if (type === WORDS_RESEED) {\n        let { words, limit } = payload;\n        let practiceWords = refreshPracticeWords(words, limit, getDayOfEpoch());\n\n        words = updateProgress(words, practiceWords);\n        saveProgress(words);\n        let queue = createQueue(practiceWords);\n        return { ...state, words, queue, currentIndex: 0 };\n    }\n    if (type === SETTINGS_RESETPROGRESS) {\n        let words = resetWords(state.words);\n        return { ...state, words, queue: [], currentIndex: 0 };\n    }\n\n    if (type === WORDS_CLOSEPRACTICE) return { ...state, queue: [], currentIndex: 0 };\n    if (type === WORDS_SETWORDS) return {...state, words: payload };\n    if (type === TEST_SAVED) return { ...state, words: payload };\n\n    return state;\n};\n\nconst initializeWordsManager = () => async dispatch => {\n    let words = await loadWords();\n    dispatch({ type: WORDS_SETWORDS, payload: words });\n};\n\nconst seedPractice = (words, limit) => dispatch => dispatch({ type: WORDS_RESEED, payload: {words, limit} });\nconst advancePractice = direction => dispatch => dispatch({ type: WORDS_ADVANCE, payload: direction });\nconst nudgePractice = () => (dispatch, getState) => dispatch({ type: getState().settings.shouldJustAdvance ? WORDS_ADVANCE : WORDS_NUDGE });\nconst closePractice = () => dispatch => dispatch({ type: WORDS_CLOSEPRACTICE });\nconst advanceSound = direction => dispatch => dispatch({ type: WORDS_ADVANCESOUND, payload: direction });\nconst nudgeSound = () => dispatch => dispatch({ type: WORDS_NUDGESOUND });\nconst registerPracticeEnd = (type, count) => dispatch => dispatch({ type: WORDS_REGISTERPRACTICEEND, payload: { type, count } });\n\nexport const operations = { initializeWordsManager, seedPractice, advancePractice, nudgePractice, advanceSound, nudgeSound, closePractice, registerPracticeEnd };","import { WORDS_CLOSEPRACTICE } from './words';\nimport { STATUS_PRACTICE, STATUS_OVERDUE, STATUS_WAITING } from '../services/Leitner';\nconst VIEW_APPLICATIONREADY = 'view_applicationready';\nconst VIEW_CHANGESUBVIEW = 'view/changesubview';\nconst VIEW_CHANGEPREVIEWFILTER = 'view_changepreviewfilter';\nconst VIEW_TOGGLEHINT = 'view/togglehint';\n\nconst defaultState = {\n    applicationReady: false,\n    currentView: null,\n    hintVisible: false,\n    subview: null,\n    previewFilter: [STATUS_PRACTICE, STATUS_OVERDUE, STATUS_WAITING]\n};\n\nexport const reducer = (state=defaultState, { type, payload }) => {\n    if (type === VIEW_CHANGESUBVIEW) return { ...state, subview: payload };\n    if (type === WORDS_CLOSEPRACTICE) return { ...state, subview: null };\n    if (type === VIEW_CHANGEPREVIEWFILTER) {\n        let previewFilter = state.previewFilter.filter(status => status !== payload);\n        if (previewFilter.length === state.previewFilter.length) previewFilter.push(payload);\n\n        return { ...state, previewFilter };\n    }\n    if (type === VIEW_TOGGLEHINT) return { ...state, hintVisible: !state.hintVisible };\n    if (type === VIEW_APPLICATIONREADY) return { ...state, applicationReady: true };\n\n    return state;\n};\n\nconst setApplicationReady = () => dispatch => dispatch({ type: VIEW_APPLICATIONREADY });\nconst changeSubview = subview => dispatch => dispatch({ type: VIEW_CHANGESUBVIEW, payload: subview});\nconst togglePreviewFilterStatus = status => dispatch => dispatch({ type: VIEW_CHANGEPREVIEWFILTER, payload: status });\nconst toggleHint = () => dispatch => dispatch({ type: VIEW_TOGGLEHINT });\n\nexport const operations = {\n    changeSubview,\n    setApplicationReady,\n    toggleHint,\n    togglePreviewFilterStatus,\n};","/* global speechSynthesis */\nimport { loadVoices, saveVoices } from './Persistence';\nimport PropTypes from 'prop-types';\n\nexport const LANGUAGE_THAI = 'voices/languagethai';\nexport const LANGUAGE_ENGLISH = 'voices/languageenglish';\n\nlet thaiVoices = [];\nlet thaiVoice = null;\nlet thaiVoiceName = null;\nlet englishVoices = [];\nlet englishVoice = null;\nlet englishVoiceName = null;\nlet rate = 1;\n\nexport const saveSettings = async () => {\n    let englishVoiceName = englishVoice ? englishVoice.name : null;\n    let thaiVoiceName = thaiVoice ? thaiVoice.name : null;\n    await saveVoices({ englishVoiceName, thaiVoiceName, rate });\n};\n\nexport const init = () => new Promise(async (resolve) => {\n    const voiceSettings = await loadVoices();\n    ({ englishVoiceName = null, thaiVoiceName = null, rate = rate } = voiceSettings || {});\n\n    const processVoices = () => {\n        const rxEnglishVoiceTest = /^en/i;\n        const rxThaiVoiceTest = /^th/i;\n        const allVoices = speechSynthesis.getVoices();\n\n        thaiVoices = allVoices.filter(({lang}) => rxThaiVoiceTest.test(lang));\n        englishVoices = allVoices.filter(({lang}) => rxEnglishVoiceTest.test(lang));\n\n        englishVoice = englishVoices.find(({name}) => name === englishVoiceName) || englishVoices[0];\n        englishVoiceName = englishVoice ? englishVoice.name : null;\n        thaiVoice = englishVoices.find(({name}) => name === thaiVoiceName) || thaiVoices[0];\n        thaiVoiceName = thaiVoice ? thaiVoice.name : null;\n\n        resolve();\n    };\n    if (speechSynthesis.getVoices().length) processVoices();\n    else speechSynthesis.onvoiceschanged = processVoices;\n});\n\nconst findVoice = (voices, newVoiceName) => voices.find(({ name }) => newVoiceName === name);\nexport const setThaiVoice = ({ name }) => {\n    thaiVoice = findVoice(thaiVoices, name) || thaiVoice;\n    saveSettings();\n};\nexport const setEnglishVoice = ({ name }) => {\n    englishVoice = findVoice(englishVoices, name) || englishVoice;\n    saveSettings();\n};\nexport const setRate = (newRate) => {\n    rate = newRate;\n    saveSettings();\n};\nexport const say = (language, word, cancelCurrent = true) => new Promise(resolve => {\n    if (cancelCurrent) speechSynthesis.cancel();\n\n    const utterance = new SpeechSynthesisUtterance();\n    if (language === LANGUAGE_ENGLISH) {\n        utterance.lang = englishVoice.lang;\n        utterance.voice = englishVoice;\n        utterance.rate = 1;\n        utterance.text = word.term;\n    } else {\n        utterance.lang = thaiVoice.lang;\n        utterance.voice = thaiVoice;\n        utterance.rate = rate;\n        utterance.text = word.thai || word.altThai;\n    }\n    // utterance.text = text;\n    utterance.onend = resolve;\n    // const text = language === LANGUAGE_ENGLISH ? word.term : (word.altThai || word.thai);\n    // utterance.lang = language === LANGUAGE_ENGLISH ? englishVoice.lang : thaiVoice.lang;\n    // utterance.voice = language === LANGUAGE_ENGLISH ? englishVoice : thaiVoice;\n    // utterance.rate = language === LANGUAGE_ENGLISH ? 1 : rate;\n    // utterance.text = text;\n\n\n    speechSynthesis.speak(utterance);\n});\n\nexport const sayWords = (language, texts) => {\n    const next = async (texts) => {\n        let [ current, ...rest ] = texts;\n        await say(language, language === LANGUAGE_ENGLISH ? { term: current } : { thai: current } );\n        if (rest.length) next(rest);\n    };\n    if (texts) next(texts);\n};\n\nexport const voicePropType = PropTypes.shape({\n    lang: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n});\n\nexport const isPronunciation = property => property === 'ipa' || property === 'paiboon';\n\nexport const getAll = () => ({\n    thaiVoices,\n    englishVoices,\n    thaiVoice,\n    englishVoice,\n    rate\n});","import { init, getAll, setThaiVoice, setEnglishVoice, setRate, say, LANGUAGE_ENGLISH, LANGUAGE_THAI } from '../services/Voices';\n\nexport const VOICE_SETVOICES = 'voice/setvoices';\nexport const VOICE_SETENGLISHVOICE = 'voice/setEnglishVoice';\nexport const VOICE_SETTHAIVOICE = 'voice/setThaiVoice';\nconst VOICE_SETRATE = 'voice/setRate';\n\nconst defaultState = {\n    thaiVoice: null,\n    thaiVoices: [],\n    englishVoice: null,\n    englishVoices: [],\n    rate: 1\n};\n\nexport const reducer = (state=defaultState, action) => {\n    if (action.type === VOICE_SETVOICES) {\n        const { thaiVoices, englishVoices, thaiVoice, englishVoice, rate } = action.payload;\n        return {...state, thaiVoices, thaiVoice, englishVoices, englishVoice, rate };\n    }\n    if (action.type === VOICE_SETENGLISHVOICE) {\n        setEnglishVoice(action.payload);\n        const { englishVoice } = getAll();\n        say(LANGUAGE_ENGLISH, { term: 'I\\'ll be your English voice' });\n        return { ...state, englishVoice };\n    }\n    if (action.type === VOICE_SETTHAIVOICE) {\n        setThaiVoice(action.payload);\n        const { thaiVoice } = getAll();\n        say(LANGUAGE_THAI, { thai: 'ฉันเป็นผู้แนะนำของคุณ' }); // \"I am your guide\"\n        return { ...state, thaiVoice };\n    }\n    if (action.type === VOICE_SETRATE) {\n        setRate(action.payload);\n        const { rate } = getAll();\n        say(LANGUAGE_THAI, { thai: 'ฉันเป็นผู้แนะนำของคุณ' }); // \"I am your guide\"\n        return { ...state, rate };\n    }\n\n    return state;\n};\n\nconst initializeVoiceManager = () => async dispatch => {\n    await init();\n    dispatch({ type: VOICE_SETVOICES, payload: getAll() });\n};\n\nexport const operations = {\n    initializeVoiceManager,\n    setEnglishVoice: voice => dispatch => dispatch({ type: VOICE_SETENGLISHVOICE, payload: voice}),\n    setThaiVoice: voice => dispatch => dispatch({ type: VOICE_SETTHAIVOICE, payload: voice}),\n    setRate: rate => dispatch => dispatch({ type: VOICE_SETRATE, payload: rate }),\n};","import { loadVowels, loadConsonants } from '../services/Persistence';\n\nconst SOUNDS_LOADVOWELS = 'sounds/loadvowels';\nconst SOUNDS_CLEARSOUNDS = 'sounds/clearsounds';\nconst SOUNDS_SHOWVOWEL = 'sounds_showvowel';\nconst SOUNDS_LOADCONSONANTS = 'sounds/loadconsonants';\nconst SOUNDS_SHOWCONSONANTSBYKEY = 'sounds/showconsonantsbykey';\nconst SOUNDS_SHOWCONFUSIONBYINDEX = 'sounds/showconfusionbyindex';\nconst SOUNDS_LOADCONFUSION = 'sounds/loadconfusion';\n\nconst defaultState = {\n    vowelsLoaded: false,\n    visibleVowel: null,\n    vowels: [],\n    consonantsLoaded: false,\n    confusionLoaded: false,\n    consonants: {},\n    confusions: [],\n    consonantKeys: {},\n    visibleConsonantKey: null,\n    visibleConfusion: null,\n};\n\nexport const reducer = (state=defaultState, { type, payload }) => {\n    if (type === SOUNDS_LOADVOWELS && state.vowelsLoaded === false) {\n        let vowels = payload.map(({ vowel, examples, pronunciation }) => {\n            let [ipa, paiboon] = pronunciation;\n            return { vowel, examples, ipa, paiboon };\n        }).filter(({examples}) => examples.length > 0);\n\n        return { ...state, vowels, vowelsLoaded: true, visibleVowel: null };\n    }\n    if (type === SOUNDS_CLEARSOUNDS) {\n        return { ...state, ...defaultState };\n    }\n    if (type === SOUNDS_LOADCONSONANTS && state.consonantsLoaded === false) {\n        let { confusions, consonants, consonantKeys } = payload;\n        return { ...state, consonants,  confusions, consonantKeys, consonantsLoaded: true, visibleConsonantKey: null };\n    }\n    if (type === SOUNDS_LOADCONFUSION && state.confusionLoaded === false) {\n        let { confusions, consonants, consonantKeys } = payload;\n        return { ...state, consonants,  confusions, consonantKeys, confusionLoaded: true, visibleConfusion: 0 };\n    }\n\n    if (type === SOUNDS_SHOWVOWEL) return { ...state, visibleVowel: payload };\n    if (type === SOUNDS_SHOWCONSONANTSBYKEY) return { ...state, visibleConsonantKey: payload };\n    if (type === SOUNDS_SHOWCONFUSIONBYINDEX) return { ...state, visibleConfusion: payload };\n\n    return state;\n};\n\nconst initializeVowels = () => async dispatch => {\n    let data = await loadVowels();\n    dispatch({ type: SOUNDS_LOADVOWELS, payload: data });\n};\nconst makeMoveVowel = (direction) => (currentVowel) => (dispatch, getState) => {\n    const { sounds: { vowels } } = getState();\n    const currentIndex = vowels.map(({vowel}) => vowel).indexOf(currentVowel.vowel);\n    const newIndex = (currentIndex + vowels.length + direction) % vowels.length;\n\n    dispatch({ type: SOUNDS_SHOWVOWEL, payload: vowels[newIndex]});\n};\nconst clearSounds = () => dispatch => {\n    dispatch({ type: SOUNDS_CLEARSOUNDS });\n};\nconst showNextVowel = makeMoveVowel(1);\nconst showPrevVowel = makeMoveVowel(-1);\nconst showVowel = vowel => dispatch => dispatch({ type: SOUNDS_SHOWVOWEL, payload: vowel });\n\nconst getConsonants = async () => {\n    let { confusions, consonants, keys } = await loadConsonants();\n    const keyNames = Object.keys(keys);\n    confusions = confusions.map(s => s.split(''));\n    let consonantKeys = Object.keys(consonants).reduce((current, consonant) => {\n        let [x, y] = consonants[consonant];\n\n        let key = keyNames.find((name) => {\n            let [a, b] = keys[name];\n            return (a === x || a === null) && (b === y || b === null);\n        }) || 'Other';\n\n        if (!current[key]) current[key] = [];\n        current[key].push(consonant);\n\n        return current;\n    }, {});\n    return { confusions, consonants, consonantKeys };\n};\nconst initializeConsonants = () => async dispatch => {\n    const payload = await getConsonants();\n    dispatch({ type: SOUNDS_LOADCONSONANTS, payload });\n};\nconst initializeConfusion = () => async dispatch => {\n    const payload = await getConsonants();\n    dispatch({ type: SOUNDS_LOADCONFUSION, payload });\n};\nconst showConsonantsByKey = (key) => (dispatch) => dispatch({ type: SOUNDS_SHOWCONSONANTSBYKEY, payload: key });\nconst showConfusionByIndex = index => dispatch => dispatch({ type: SOUNDS_SHOWCONFUSIONBYINDEX, payload: index });\n\nexport const operations = { initializeVowels, clearSounds, showVowel, showNextVowel, showPrevVowel, initializeConsonants, showConsonantsByKey, showConfusionByIndex, initializeConfusion, };","import { memoize } from './Utils';\n\nexport const TONE_CLASS_HIGH = 1;\nexport const TONE_CLASS_MID = 2;\nexport const TONE_CLASS_LOW = 3;\nexport const TONE_LOW = 4;\nexport const TONE_MID = 5;\nexport const TONE_HIGH = 6;\nexport const TONE_RISING = 7;\nexport const TONE_FALLING = 8;\nexport const TONE_ENDING_STOP = 9;\nexport const TONE_ENDING_SONORANT = 10;\nexport const TONE_VOWEL_LONG = 11;\nexport const TONE_VOWEL_SHORT = 12;\nexport const TONE_MAI_EK = 13;       //  ่\nexport const TONE_MAI_THO = 14;      //  ้\nexport const TONE_MAI_TRI = 15;      //  ๊\nexport const TONE_MAI_CHATTAWA = 16; //  ๋\n\nexport const lowCharacters = 'ครทมพลนชวยภซงฟธฮฆญณฒฌฑฬฅ';\nexport const midCharacters = 'กตปอจบดฎฏ';\nexport const highCharacters = 'สหขผถศฝฉฐษฃ';\n\nconst rxThai = /[ก-๛]/;\nconst rxZeroWidth = /[๋๊้่๎ํ์็ฺูุืึีิั]/u;\nconst rxFindClass = new RegExp(`^([${lowCharacters}]?)([${midCharacters}]?)([${highCharacters}]?)`, 'u');\n\nconst rxLow = new RegExp(`[${lowCharacters}]`, 'u');\nconst rxMid = new RegExp(`[${midCharacters}]`, 'u');\nconst rxHigh = new RegExp(`[${highCharacters}]`, 'u');\n\nexport const isLow = string => rxLow.test(string);\nexport const isMid = string => rxMid.test(string);\nexport const isHigh = string => rxHigh.test(string);\nexport const isThai = string => rxThai.test(string);\n\nconst reducer = (components, character) => {\n    if (rxZeroWidth.test(character)) {\n        let [lastCharacter='', toneClass] = components.pop();\n        return [...components, [lastCharacter + character, toneClass]];\n    }\n\n    let [, lowMatch, midMath, highMatch] = rxFindClass.exec(character);\n\n    let toneClass =\n        lowMatch ? TONE_CLASS_LOW :\n        midMath ? TONE_CLASS_MID :\n        highMatch ? TONE_CLASS_HIGH :\n        null;\n\n    if (toneClass) return [...components, [character, toneClass]];\n    return [...components, [character]];\n};\n\nexport const getComponents = (input='') => input.split('').reduce(reducer, []);\nexport const getCachedCompents = memoize(getComponents, 100);\n\nexport const getTone = ({ character, cls, length, ending, marker }) => {\n    if (cls === TONE_CLASS_HIGH || isHigh(character)) {\n        if (marker === TONE_MAI_EK) return TONE_LOW;\n        if (marker === TONE_MAI_THO) return TONE_FALLING;\n\n        if (ending === TONE_ENDING_SONORANT || (ending === null && length === TONE_VOWEL_LONG)) return TONE_RISING;\n        if (ending === TONE_ENDING_STOP || (ending === null && length === TONE_VOWEL_SHORT)) return TONE_LOW;\n    } else if (cls === TONE_CLASS_MID || isMid(character)) {\n        if (marker === TONE_MAI_EK) return TONE_LOW;\n        if (marker === TONE_MAI_THO) return TONE_FALLING;\n        if (marker === TONE_MAI_TRI) return TONE_HIGH;\n        if (marker === TONE_MAI_CHATTAWA) return TONE_RISING;\n\n        if (ending === TONE_ENDING_STOP || (ending === null && length === TONE_VOWEL_SHORT)) return TONE_LOW;\n    } else {\n        if (marker === TONE_MAI_EK) return TONE_FALLING;\n        if (marker === TONE_MAI_THO) return TONE_HIGH;\n\n        if (ending === null && length === TONE_VOWEL_SHORT) return TONE_HIGH;\n        if (ending === TONE_ENDING_STOP) return length === TONE_VOWEL_SHORT ? TONE_HIGH : TONE_FALLING;\n    }\n\n    return TONE_MID;\n};\n\nexport const getTonesByStage = (stage, tones = []) => {\n    let target = 0;\n    stage = stage - 1;\n    if (stage <= target++) return { tones: tones.filter(({ length, ending, marker }) => (!marker && (ending === TONE_ENDING_SONORANT || (length === TONE_VOWEL_LONG && !ending)))), label: `Stage ${target}: Only live (no markers)`, className: 'c-1'};\n    if (stage === target++) return { tones: tones.filter(({length, ending, marker}) => (!marker && length === TONE_VOWEL_SHORT && ending !== TONE_ENDING_SONORANT)), label: `Stage ${target}: Only dead & short (no markers)`, className: 'c-2'};\n    if (stage === target++) return { tones: tones.filter(({ length, ending, marker }) => (!marker && (ending === TONE_ENDING_SONORANT || (length === TONE_VOWEL_SHORT)))), label: `Stage ${target}: All live & all short (no markers)`, className: 'c-3'};\n    if (stage === target++) return { tones: tones.filter(({ marker }) => !marker), label: `Stage ${target}: All live & dead (no markers)`, className: 'c-4'};\n    if (stage === target++) return { tones: tones.filter(({ marker }) => marker === TONE_MAI_EK || marker === TONE_MAI_THO), label: `Stage ${target}: Only mai ek & mai tho markers`, className: 'c-5'};\n    if (stage === target++) return { tones: tones.filter(({ marker }) => !!marker), label: `Stage ${target}: All markers only`, className: 'c-6'};\n    if (stage === target++) return { tones: tones.filter(({ cls }) => cls === TONE_CLASS_LOW), label: `Stage ${target}: Only low-class`, className: 'c-7'};\n    if (stage === target++) return { tones: tones.filter(({ cls }) => cls === TONE_CLASS_MID), label: `Stage ${target}: Only mid-class`, className: 'c-8'};\n    if (stage === target++) return { tones: tones.filter(({ cls }) => cls === TONE_CLASS_HIGH), label: `Stage ${target}: Only high-class`, className: 'c-9'};\n\n    return { tones: [...tones], label: 'Everything', last: true};\n};\n\nexport const getTonesDescriptors = () => {\n    let descriptorsList = [];\n    let stage = 1;\n    let last, label, className;\n    do {\n        ({last, label, className} = getTonesByStage(stage));\n        descriptorsList.push({ stage, label, className });\n        stage += 1;\n    } while (!last);\n\n    return descriptorsList;\n};","// import { buildRandomizedValuesQueue, getDayOfEpoch } from '../services/Utils';\nimport { loadTones } from '../services/Persistence';\nimport { TONE_CLASS_HIGH, TONE_CLASS_MID, TONE_CLASS_LOW, TONE_ENDING_STOP, TONE_ENDING_SONORANT, TONE_VOWEL_LONG, TONE_VOWEL_SHORT, TONE_MAI_EK, TONE_MAI_THO, TONE_MAI_TRI, TONE_MAI_CHATTAWA } from '../services/Tones';\n\nexport const TONES_INITIALIZE = 'tones/initialize';\n\nconst defaultState = {\n    tonesmap: []\n};\n\nconst stringToClass = {\n    low: TONE_CLASS_LOW,\n    mid: TONE_CLASS_MID,\n    high: TONE_CLASS_HIGH,\n};\nconst stringToLength = {\n    long: TONE_VOWEL_LONG,\n    short: TONE_VOWEL_SHORT,\n};\nconst stringToEnding = {\n    stop: TONE_ENDING_STOP,\n    sonorant: TONE_ENDING_SONORANT,\n};\nconst stringToMarker = {\n    ek: TONE_MAI_EK,\n    tho: TONE_MAI_THO,\n    tri: TONE_MAI_TRI,\n    chattawa: TONE_MAI_CHATTAWA,\n};\n\nexport const reducer = (state=defaultState, { type, payload }) => {\n    switch (type) {\n        case TONES_INITIALIZE:\n        return { ...state, ...payload };\n\n        default:\n        return state;\n    }\n};\n\nconst initializeTones = () => async dispatch => {\n    let tonesmap = await loadTones();\n    tonesmap = tonesmap.map(({ cls, length, ending, marker, examples }) => {\n        cls = stringToClass[cls] || null;\n        length = stringToLength[length] || null;\n        ending = stringToEnding[ending] || null;\n        marker = stringToMarker[marker] || null;\n\n        return { cls, length, ending, marker, examples };\n    });\n\n    dispatch({ type: TONES_INITIALIZE, payload: { tonesmap } });\n};\n\nexport const operations = {\n    initializeTones\n};\n","import { createMiddleware } from 'redux-beacon';\nimport GoogleAnalyticsGtag, { trackEvent, trackPageView } from '@redux-beacon/google-analytics-gtag';\n// import logger from '@redux-beacon/logger';\nimport debounceEvent from '@redux-beacon/debounce-event';\n\nimport { SETTINGS_INITIALIZE, SETTINGS_SETPRONUNCIATIONTYPE, SETTINGS_SETPRACTICELIMIT, SETTINGS_SETTESTLIMIT, SETTINGS_SETPRACTICEDISPLAYORDER, } from './settings';\nimport { VOICE_SETVOICES, VOICE_SETTHAIVOICE, VOICE_SETENGLISHVOICE } from './voice';\nimport { WORDS_REGISTERPRACTICEEND } from './words';\nimport { TEST_COMPLETETEST, TEST_SETTESTTYPE } from './tests';\n\nexport const TRACKING_TRACKROUTECHANGE = 'tracking/trackroutechange';\nexport const TRACKING_STARTPROCESS = 'tracking/startprocess';\n\nconst buildTestSummaryString = ({scores}) => {\n    const summary = scores.reduce((carry, { score, aspect }) => {\n        carry[aspect * 3 + score + 1] += 1;\n        return carry;\n    }, [0, 0, 0,   0, 0, 0,   0, 0, 0]);\n\n    return `Test complete totals: ${scores.length}, a: ${ summary.slice(0, 3).join(',')}, b: ${ summary.slice(3, 6).join(',')}, c: ${ summary.slice(6,9).join(',') }`;\n};\nconst buildTestStartString = ({ type, testWords }) => `Start test type: ${ type }, words ${ testWords.length }`;\n\nconst eventsMap = {\n    [TRACKING_TRACKROUTECHANGE]: trackPageView((action) => ({ location: action.payload })),\n    [TRACKING_STARTPROCESS]: trackEvent(({category, name}) => ({ action:'startprocess', category, label: `Start process: ${ category }:${ name }`  })),\n\n    [SETTINGS_INITIALIZE]: trackEvent(() => ({ action:'initializesettings', category: 'Load', label: 'Load application' })),\n    [VOICE_SETVOICES]: trackEvent(action => ({ action: 'setvoices', category: 'Load', label: `Available voices: Thai: ${ action.payload.thaiVoices.length }, English: ${ action.payload.englishVoices.length }` })),\n\n    [SETTINGS_SETPRONUNCIATIONTYPE]: trackEvent(action => ({ action: 'changepronuncation', category: 'Settings', label: action.payload })),\n    [SETTINGS_SETPRACTICELIMIT]: debounceEvent(1000, trackEvent(action => ({ action: 'setpracticewordlimit', category: 'Settings', label: `Set practice limit ${ action.payload.practiceWordLimit }` }))),\n    [SETTINGS_SETTESTLIMIT]: debounceEvent(1000, trackEvent(action => ({ action: 'settestwordlimit', category: 'Settings', label: `Set test limit ${ action.payload.testingWordLimit }` }))),\n    [SETTINGS_SETPRACTICEDISPLAYORDER]: debounceEvent(1000, trackEvent(action => ({ action: 'setpracticedisplayorder', category: 'Settings', label: action.payload.practiceOrder.join(', ') }))),\n\n    [VOICE_SETTHAIVOICE]: trackEvent(action => ({ action: 'changethaivoice', category: 'Voice', label: `Set Thai voice: ${ action.payload.name }`})),\n    [VOICE_SETENGLISHVOICE]: trackEvent(action => ({ action: 'changeenglishvoice', category: 'Voice', label: `Set English voice: ${ action.payload.name }`})),\n\n    [WORDS_REGISTERPRACTICEEND]: trackEvent(action => ({ action: 'endpractice', category: 'Practice', label: `End ${ action.payload.type } practice: ${ action.payload.count }` })),\n    [TEST_SETTESTTYPE]: trackEvent(action => ({ action: 'starttest', category: 'Test', label: buildTestStartString(action.payload) })),\n    [TEST_COMPLETETEST]: trackEvent(action => ({ action: 'completetest', category: 'Test', label: buildTestSummaryString(action.payload) })),\n};\n\nexport const middleware = createMiddleware(eventsMap, GoogleAnalyticsGtag('UA-124762758-1'), { /*logger*/ });\n\nexport const operations = {\n    trackRouteChange: path => dispatch => dispatch({ type: TRACKING_TRACKROUTECHANGE, payload: path }),\n    trackStartPracticeType: type => dispatch => dispatch({ type: TRACKING_STARTPROCESS, payload: { category: 'Practice', name: type } }),\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { reducer as view, operations as viewOperations } from './view';\nimport { reducer as voice, operations as voiceOperations } from './voice';\nimport { reducer as settings, operations as settingsOperations } from './settings';\nimport { reducer as words, operations as wordOperations } from './words';\nimport { reducer as test, operations as testOperations } from './tests';\nimport { reducer as sounds, operations as soundsOperations } from './sounds';\nimport { reducer as tones, operations as tonesOperations } from './tones';\nimport { middleware as trackingMiddleware, operations as trackingOperations  } from './tracking';\n\nconst rootReducer = combineReducers({\n    view,\n    voice,\n    settings,\n    words,\n    test,\n    sounds,\n    tones,\n});\n\nlet enhancers = [];\nconst middleware = [\n    trackingMiddleware,\n    thunk,\n];\nif (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n    if (typeof devToolsExtension === 'function') enhancers = [...enhancers, devToolsExtension()];\n}\nconst rootEnhancer = compose( applyMiddleware(...middleware), ...enhancers );\n\nconst store = createStore(rootReducer, rootEnhancer);\n\nexport const operations = {\n    ...viewOperations,\n    ...voiceOperations,\n    ...settingsOperations,\n    ...wordOperations,\n    ...testOperations,\n    ...soundsOperations,\n    ...tonesOperations,\n    ...trackingOperations,\n};\n\nexport default store;","import { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ScrollReset extends Component {\n    componentDidUpdate(prev) {\n        if (this.props.location !== prev.location) window.scrollTo(0, 0);\n    }\n    render() {\n        return this.props.children;\n    }\n}\n\nScrollReset.propTypes = {\n    location: PropTypes.object.isRequired,\n    children: PropTypes.array,\n};\n\nexport default withRouter(ScrollReset);","import React from 'react';\n\nconst Loading = () => <div>Loading...</div>;\n\nexport default Loading;","import React, { Fragment } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const urlToTitle = url => {\n    return {\n        '/': 'Home',\n        '/basics': 'Basics',\n        '/basics/vowels': 'Vowels',\n        '/basics/consonants': 'Consonants',\n        '/basics/consonants/review': 'Review',\n        '/basics/consonants/confusion': 'Easily confused consonants',\n        '/basics/tones': 'Tones',\n        '/basics/tones/classes': 'Consonant classes',\n        '/basics/tones/rules': 'Tone rules',\n        '/practice': 'Practice',\n        '/practice/full': 'Full',\n        '/practice/sounds-only': 'Sounds Only',\n        '/test': 'Test',\n        '/test/overdue': 'Scheduled words',\n        '/test/current': 'Practice words',\n        '/progress': 'Progress',\n        '/settings': 'Settings',\n    }[url] || null;\n};\n\nconst BreadcrumbsItem = ({ location: { pathname }, match }) => {\n    const title = urlToTitle(match.url);\n\n    return <Fragment>\n        <li className={match.isExact ? 'breadcrumb-active' : undefined}>\n        ⟫ { pathname === match.url ? <span>{ title }</span> : <Link to={match.url || ''}>{ title }</Link> }\n        </li>\n        <Route path={`${match.url}/:path`} component={BreadcrumbsItem} />\n    </Fragment>;\n};\n\nBreadcrumbsItem.propTypes = {\n    location: PropTypes.shape({ pathname: PropTypes.string }),\n    match: PropTypes.object.isRequired\n};\n\nexport default BreadcrumbsItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Route, withRouter } from 'react-router-dom';\nimport BreadcrumbsItem, { urlToTitle } from './BreadcrumbsItem';\n\nconst Breadcrumbs = ({ location: { pathname } }) => {\n    if (pathname === '/' || !urlToTitle(pathname)) return null;\n\n    return <div className=\"breadcrumbs\">\n        <ul className='container'>\n            <li><Link to=\"/\">Home</Link></li>\n            <Route path='/:path' component={BreadcrumbsItem} />\n        </ul>\n    </div>;\n};\nBreadcrumbs.propTypes = {\n    location: PropTypes.shape({ location: PropTypes.object }),\n};\n\n\nexport default withRouter(Breadcrumbs);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MainNavigation = () => {\n        return <div className=\"navigation\">\n            <h1>Read Thai</h1>\n            <section>\n                <Link className=\"button\" to=\"/basics\">The basics</Link>\n            </section>\n            <section>\n                <Link className=\"button\" to=\"/practice\">Practice words</Link>\n            </section>\n            <section>\n                <Link className=\"button\" to=\"/test\">Test words</Link>\n            </section>\n            <section>\n                <Link className=\"button\" to=\"/progress\">View progress</Link>\n            </section>\n            <section>\n                <Link className=\"button\" to=\"/settings\">Settings</Link>\n            </section>\n        </div>;\n};\n\nexport default MainNavigation;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BasicNavigation = () => {\n        return <div className=\"navigation\">\n            <h1>Thai Basics</h1>\n            <section>\n                <Link className=\"button\" to=\"/basics/vowels\">Thai vowels</Link>\n            </section>\n            <section>\n                <Link className=\"button\" to=\"/basics/consonants\">Thai consonants</Link>\n            </section>\n            <section>\n                <Link className=\"button\" to=\"/basics/tones\">Thai tones</Link>\n            </section>\n        </div>;\n};\n\nexport default BasicNavigation;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ConsonantNavigation = () => {\n        return <div className=\"navigation\">\n            <h1>Thai Consonants</h1>\n            <section>\n                <Link className=\"button\" to=\"/basics/consonants/review\">Review consonants</Link>\n            </section>\n            <section>\n                <Link className=\"button\" to=\"/basics/consonants/confusion\">Easily confused consonants</Link>\n            </section>\n            <section>\n                <Link className=\"button\" to=\"/basics/tones/classes\">Consonant classes</Link>\n            </section>\n        </div>;\n};\n\nexport default ConsonantNavigation;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ToneNavigation = () => {\n        return <div className=\"navigation\">\n            <h1>Thai Tones</h1>\n            <section>\n                <Link className=\"button\" to=\"/basics/tones/classes\">Consonant classes</Link>\n            </section>\n            <section>\n                <Link className=\"button\" to=\"/basics/tones/rules\">Tone rules</Link>\n            </section>\n        </div>;\n};\n\nexport default ToneNavigation;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ToggleHeader = ({ children, onClick, selected }) => <div onClick={ onClick } className={`toggle-header ${ selected ? 'selected' : ''}`}>{ children }</div>;\n\nToggleHeader.propTypes = {\n    children: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    selected: PropTypes.bool.isRequired\n};\n\nexport default ToggleHeader;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { say, LANGUAGE_THAI } from '../../services/Voices';\n\nclass PlayButton extends Component {\n    constructor(...args) {\n        super(...args);\n        this.play = this.play.bind(this);\n    }\n    async play(evt) {\n        evt.stopPropagation();\n        evt.target.blur();\n        let { word } = this.props;\n        await  say(LANGUAGE_THAI, word);\n    }\n    render() {\n        return <button onClick={ this.play }>▷</button>;\n    }\n}\n\nPlayButton.propTypes = {\n    word: PropTypes.shape({\n        altThai: PropTypes.string,\n        thai: PropTypes.string.isRequired\n    }).isRequired,\n};\n\nexport default PlayButton;","import React from 'react';\nimport PropTypes from 'prop-types';\n// import CircularProgressbar from 'react-circular-progressbar';\nimport { CircularProgressbar } from 'react-circular-progressbar';\n\n\nconst ProgressIcon = ({ progress }) => <div className=\"progress-meter\">\n    <CircularProgressbar\n        percentage={progress * 100}\n        strokeWidth={ 30 }\n        styles={{\n            background: { fill: '#3e98c7' },\n            path: { stroke: progress < 1 ? '#8bc34a' : 'gold' },\n            trail: { stroke: '#eee' },\n        }}\n    />\n</div>;\n\nProgressIcon.propTypes = {\n    progress: PropTypes.number\n};\n\nexport default ProgressIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON } from '../../services/WordManager';\nimport PlayButton from '../common/PlayButton';\nimport ProgressIcon from '../common/ProgressIcon';\n\nconst getPronunciation = (ipa, paiboon, pronunciationType) => pronunciationType === PRONUNCIATIONTYPE_IPA ? ipa : paiboon;\n\nconst ProgressItem = ({ word, pronunciationType, showProgress }) => {\n    const { term, thai, ipa, paiboon, aspectScores=[0, 0] } = word;\n\n    return <tr>\n        <td>{ term }</td>\n        <td>{ thai }</td>\n        <td><PlayButton word={word} /> { getPronunciation(ipa, paiboon, pronunciationType) }</td>\n        { showProgress ? <td className=\"progress-icons\"><ProgressIcon progress={Math.min(...aspectScores) / 5} /></td> : null }\n    </tr>;\n};\n\nProgressItem.propTypes = {\n    word: PropTypes.shape({\n        term: PropTypes.string.isRequired,\n        thai: PropTypes.string.isRequired,\n        ipa: PropTypes.string.isRequired,\n        paiboon: PropTypes.string.isRequired,\n        aspectScores: PropTypes.arrayOf(PropTypes.number),\n    }),\n    pronunciationType: PropTypes.oneOf([ PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON]),\n    showProgress: PropTypes.bool.isRequired,\n};\n\nexport default ProgressItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressItem from './ProgressItem';\n\nconst WordsTable = ({pronunciationType, showProgress, visibleWords}) => {\n    const items = visibleWords.map(word => <ProgressItem word={ word } key={ word.id } pronunciationType={ pronunciationType } showProgress={ showProgress } />);\n    const className = showProgress ? 'words-table' : 'words-table no-progress';\n    return <div className={ className }>\n        <table>\n            <thead>\n                <tr>\n                    <th>Term</th>\n                    <th>Thai</th>\n                    <th>Pronunciation</th>\n                    { showProgress ? <th>Progress</th> : null }\n                </tr>\n            </thead>\n            <tbody>\n                { items }\n            </tbody>\n        </table>\n    </div>;\n};\n\nWordsTable.propTypes = {\n    pronunciationType: PropTypes.string.isRequired,\n    showProgress: PropTypes.bool,\n    visibleWords: PropTypes.array.isRequired,\n};\nWordsTable.defaultProps = {\n    showProgress: true\n};\n\nexport default WordsTable;","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport WordsTable from './WordsTable';\n\nimport '../../styles/css/WordsTable.css';\n\nconst mapStateToProps = state => ({\n    words: state.words.words,\n    pronunciationType: state.settings.pronunciationType,\n    previewFilter: state.view.previewFilter,\n});\n\nexport default connect(mapStateToProps, operations)(WordsTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDayOfEpoch, memoize } from '../../services/Utils';\nimport { filterByRoughStatus } from '../../services/Leitner';\nimport { STATUS_OVERDUE, STATUS_MASTERED, STATUS_NONE, STATUS_WAITING, STATUS_PRACTICE } from '../../services/Leitner';\nimport ToggleHeader from './ToggleHeader';\nimport WordsTable from '../WordsTable';\n\nconst getFilteredWordsList = memoize(filterByRoughStatus);\n\nconst Progress = ({ togglePreviewFilterStatus, words, previewFilter }) => {\n    const visibleWords = getFilteredWordsList(words, getDayOfEpoch(new Date()), previewFilter);\n\n    return <div className=\"progress-page\">\n        <h1>Progress</h1>\n        <div className=\"filter\">\n            <ToggleHeader onClick={ () => togglePreviewFilterStatus(STATUS_PRACTICE) } selected={ previewFilter.includes(STATUS_PRACTICE) }>Practice words</ToggleHeader>\n            <ToggleHeader onClick={ () => togglePreviewFilterStatus(STATUS_OVERDUE) } selected={ previewFilter.includes(STATUS_OVERDUE) }>Currently due for testing</ToggleHeader>\n            <ToggleHeader onClick={ () => togglePreviewFilterStatus(STATUS_WAITING) } selected={ previewFilter.includes(STATUS_WAITING) }>Pending tests</ToggleHeader>\n            <ToggleHeader onClick={ () => togglePreviewFilterStatus(STATUS_MASTERED) } selected={ previewFilter.includes(STATUS_MASTERED) }>Mastered words</ToggleHeader>\n            <ToggleHeader onClick={ () => togglePreviewFilterStatus(STATUS_NONE) } selected={ previewFilter.includes(STATUS_NONE) }>Future words</ToggleHeader>\n        </div>\n        <WordsTable visibleWords={ visibleWords } />\n    </div>;\n};\n\nProgress.propTypes = {\n    words: PropTypes.array.isRequired,\n    togglePreviewFilterStatus: PropTypes.func.isRequired,\n    previewFilter: PropTypes.arrayOf(PropTypes.number).isRequired\n};\nexport default Progress;","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport Progress from './Progress';\n\nimport '../../styles/css/Progress.css';\n\nconst mapStateToProps = state => ({\n    words: state.words.words,\n    previewFilter: state.view.previewFilter,\n});\n\nconst { togglePreviewFilterStatus } = operations;\nexport default connect(mapStateToProps, { togglePreviewFilterStatus })(Progress);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst VoiceButton = ({ label, disabled, onClick }) => <button onClick={ onClick } className={ disabled ? 'selected' : null}>{ label }</button>;\n\nVoiceButton.propTypes = {\n    label: PropTypes.string.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired\n};\nexport default VoiceButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VoiceButton from './VoiceButton';\n\nconst VoiceSelector = ({voices, selectedVoice, onSelectVoice, heading}) => {\n    const buttons = voices.map(voice => <VoiceButton key={voice.name} label={ voice.name } disabled={ voice === selectedVoice } onClick={ () => onSelectVoice(voice) } />);\n\n    return <div className=\"voice-selector\">\n        <h2>{ heading } ({voices.length} available)</h2>\n        <div className=\"voices\">{buttons}</div>\n    </div>;\n};\n\nconst voicePropType = PropTypes.shape({\n    name: PropTypes.string.isRequired\n});\n\nVoiceSelector.propTypes = {\n    heading: PropTypes.string.isRequired,\n    voices: PropTypes.arrayOf(voicePropType).isRequired,\n    selectedVoice: voicePropType,\n    onSelectVoice: PropTypes.func\n};\n\nexport default VoiceSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\n\nconst toPercent = v => `${Math.round(v * 100)}%`;\nconst RateSelector = ({ value, onChange }) => <div>\n    <h2>Speech rate (Thai)</h2>\n    <Slider min={0.5} max={1.8} step={0.1} value={ value } onChange={ onChange } />\n    <div>{ toPercent(value) }</div>\n\n</div>;\n\nRateSelector.propTypes = {\n    value: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired\n};\nexport default RateSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PlayButton from '../common/PlayButton';\nconst PronunciationSample = ({ word }) => <div className=\"sample\">\n        <div>{ word.ipa }</div>\n        <div><PlayButton word={word} /></div>\n        <div>{ word.paiboon }</div>\n    </div>;\n\n\nPronunciationSample.propTypes = {\n    word: PropTypes.shape({\n        thai: PropTypes.string.isRequired,\n        ipa: PropTypes.string.isRequired,\n        paiboon: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default PronunciationSample;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON } from '../../services/WordManager';\nimport PronunciationSample from './PronunciationSample';\n\nconst goodWords = [\n    'สร้าง',\n    'เฮ้อ',\n    'จริต',\n    'กีฬา',\n    'การเมือง',\n    'ปกครอง',\n];\nconst makeClickableHeader = (label, onClick, isDisabled) => isDisabled ? <button className=\"disabled-button\">{label}</button> : <button onClick={ onClick }>{label}</button>;\nconst PronunciationSelector = ({ changePronunciationType, pronunciationType, words }) => {\n    const sampleWords =\n        goodWords.map(thai => words.find(word => word.thai === thai))\n        .map(word => <PronunciationSample key={ word.thai } word={ word } />);\n\n    const samplesClassName = pronunciationType === PRONUNCIATIONTYPE_PAIBOON ? 'samples paiboon' : 'samples ipa';\n    return (<div className=\"voice-selector\">\n        <h2>Displayed Pronunciation</h2>\n        <p>The goal of this entire site is for you to be able to read without any intermediate transcription system.</p>\n        <p>But to get you there, this site supports two popular phonemic transcription systems: the <a href=\"https://en.wikipedia.org/wiki/International_Phonetic_Alphabet\">International Phonemic Alphabet</a>, a standard system used commonly by linguists to transcribe virtually any human language; and the Paiboon system, developed by <a href=\"https://www.paiboonpublishing.com/\">Paiboon Publishing</a>.</p>\n        <p>Which should you use? That depends on you. IPA is generally considered to be the most complete transcription system in common use. Paiboon, on the other hand, is more popular in print and on the Internet. But it is more important that you select a system that makes the most sense to you. Or perhaps stick to the system you already have seen in other study books. No matter which system you pick, you have to prepare yourself to deal with unfamiliar symbols for Thai&apos;s many unfamiliar sounds.</p>\n        <p>Still not sure? Listen to a few of the sample words below and then look at how the two systems transcribe these words. Then select the system that makes greatest sense to you.</p>\n\n        <div className={ samplesClassName }>\n            <div className=\"sample\">\n                <div>{ makeClickableHeader('Use I.P.A.', () => changePronunciationType(PRONUNCIATIONTYPE_IPA), pronunciationType === PRONUNCIATIONTYPE_IPA) }</div>\n                <div></div>\n                <div>{ makeClickableHeader('Use Paiboon', () => changePronunciationType(PRONUNCIATIONTYPE_PAIBOON), pronunciationType === PRONUNCIATIONTYPE_PAIBOON) }</div>\n            </div>\n            { sampleWords }\n        </div>\n    </div>);\n};\n\nPronunciationSelector.propTypes = {\n    pronunciationType: PropTypes.oneOf([ PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON ]).isRequired,\n    changePronunciationType: PropTypes.func.isRequired,\n    words: PropTypes.array.isRequired,\n};\n\nexport default PronunciationSelector;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { moveArrayItem } from '../../services/Utils';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst grid = 8;\nconst getListStyle = isDraggingOver => ({\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor: isDraggingOver ? '#999' : '#ddd',\n    padding: grid,\n    width: 250,\n});\nconst getItemStyle = (isDragging, draggableStyle, disabled) => ({\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    background: isDragging ? '#73959a' : disabled ? '#eee' : '#c8dbde',\n    color: isDragging ? '#fff' : disabled ? '#ccc' : 'initial',\n    textAlign: 'center',\n    ...draggableStyle,\n});\n\nexport default class DragDropSorter extends Component {\n    constructor(...args) {\n        super(...args);\n\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n    onDragEnd({ source, destination }) {\n        if (!destination) return;\n        const order = moveArrayItem(this.props.order, source.index, destination.index);\n        this.props.onChange(order);\n    }\n    render() {\n        const { className, disabled } = this.props;\n        return <div className={ className }>\n            <DragDropContext onDragEnd={ this.onDragEnd }>\n                <Droppable droppableId=\"droppable\" isDropDisabled={ disabled }>\n                    {(provided, snapshot) => <div ref={ provided.innerRef } style={ getListStyle(snapshot.isDraggingOver) }>\n                        {\n                            this.props.order.map((childOrder, index) => <Draggable key={childOrder} draggableId={childOrder} index={index} isDragDisabled={ disabled }>\n                                {(provided, snapshot) => <div ref={ provided.innerRef } { ...provided.draggableProps } { ...provided.dragHandleProps } style={ getItemStyle(snapshot.isDragging, provided.draggableProps.style, disabled) } >{ childOrder }</div>}\n                            </Draggable>)\n                        }\n                    </div>}\n                </Droppable>\n            </DragDropContext>\n        </div>;\n    }\n}\n\nDragDropSorter.propTypes = {\n    disabled: PropTypes.bool.isRequired,\n    order: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func.isRequired,\n    className: PropTypes.string\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DraggableOrderSelector from './DraggableOrderSelector';\nconst PracticeOrderSelector = ({ changePracticeDisplayOrder, practiceAllAtOnce, practiceOrder }) => (<div>\n    <h2>Practice Reveal Order</h2>\n    <div className=\"all-at-once\"><input type=\"checkbox\" id=\"practiceAllAtOnce\" checked={ !practiceAllAtOnce } onChange={ () => changePracticeDisplayOrder( { practiceAllAtOnce: !practiceAllAtOnce } ) } name=\"toggle\" /> <label htmlFor=\"practiceAllAtOnce\">Reveal words incrementally in the following order</label></div>\n\n    <DraggableOrderSelector className=\"practice-order-selector\" order={ practiceOrder } onChange={ practiceOrder => changePracticeDisplayOrder({ practiceOrder }) } disabled={ practiceAllAtOnce }></DraggableOrderSelector>\n</div>);\n\nPracticeOrderSelector.propTypes = {\n    changePracticeDisplayOrder: PropTypes.func.isRequired,\n    practiceWordLimit: PropTypes.number.isRequired,\n    practiceOrder: PropTypes.arrayOf(PropTypes.string).isRequired,\n    practiceAllAtOnce: PropTypes.bool.isRequired,\n};\n\nexport default PracticeOrderSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\n\nconst RangedNumberSelector = ({ min, max, value, onChange, heading }) => <div>\n    <h2>{heading}</h2>\n    <Slider min={min} max={max} step={1} value={ value } onChange={ onChange } />\n    <div>{ value }</div>\n\n</div>;\n\nRangedNumberSelector.propTypes = {\n    heading: PropTypes.string.isRequired,\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired\n};\nexport default RangedNumberSelector;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCachedCompents, TONE_CLASS_LOW, TONE_CLASS_MID, TONE_CLASS_HIGH } from '../../services/Tones';\n\nconst getClassName = classIndex => classIndex === TONE_CLASS_LOW ? 'tc_low' :\n    classIndex === TONE_CLASS_MID ? 'tc_mid' :\n    classIndex === TONE_CLASS_HIGH ? 'tc_high' :\n    'tc_none';\n\n    const buildComponents = parts => parts.map(([component, className], index) => <span key={index} className={ getClassName(className) }>{ component }</span>);\n\nconst Thai = ({word}) => <Fragment>\n    { buildComponents(getCachedCompents(word.thai)) }\n</Fragment>;\n\nThai.propTypes = {\n    word: PropTypes.shape({\n        thai: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default Thai;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Thai from '../common/ColorizedThai';\n\nconst CharacterClassToggle = ({ onToggle, showCharacterClasses }) => <div>\n    <h2>Practice hints</h2>\n\n    <div className=\"button-group\">\n        <div onClick={ showCharacterClasses ? null : onToggle } className={`toggle-header ${ showCharacterClasses ? 'selected' : ''}`}>Color character class</div>\n        <div onClick={ showCharacterClasses ? onToggle : null } className={`toggle-header ${ !showCharacterClasses ? 'selected' : ''}`}>No color</div>\n    </div>\n    <div>\n        <h3>\n            { showCharacterClasses ? <Thai word={{ thai: 'หยำเป' }} /> : 'หยำเป'}\n        </h3>\n    </div>\n</div>;\n\nCharacterClassToggle.propTypes = {\n    onToggle: PropTypes.func.isRequired,\n    showCharacterClasses: PropTypes.bool.isRequired,\n};\n\nexport default CharacterClassToggle;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../../services/Utils';\n\nconst ResetProgress = ({ resetProgress, toggleResetProgress, resetProgressVisible }) => {\n    const modalClassNames = classNames({\n        modal: true,\n        visible: resetProgressVisible\n    });\n\n    return <div className=\"reset-progress\">\n        <h2>Reset</h2>\n        <div className=\"button-group\">\n            <div className=\"danger\" onClick={ toggleResetProgress }>Reset progress</div>\n        </div>\n        <p>Be careful! Resetting your progress will be like starting all tests from scratch.</p>\n\n        <div className={ modalClassNames }>\n            <div className=\"bg\" onClick={ toggleResetProgress }></div>\n            <div className=\"fg\">\n                <h3>Reset progress?</h3>\n                <div>\n                    <button onClick={ toggleResetProgress }>Cancel</button>\n                    <button className=\"danger\" onClick={ resetProgress }>Reset progress</button>\n                </div>\n            </div>\n        </div>\n    </div>;\n};\n\nResetProgress.propTypes = {\n    toggleResetProgress: PropTypes.func.isRequired,\n    resetProgress: PropTypes.func.isRequired,\n    resetProgressVisible: PropTypes.bool.isRequired,\n};\n\nexport default ResetProgress;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VoiceSelector from './VoiceSelector';\nimport RateSelector from './RateSelector';\nimport PronunciationSelector from './PronunciationSelector';\nimport PracticeOrderSelector from './PracticeOrderSelector';\nimport RangedNumberSelector from './RangedNumberSelector';\nimport CharacterClassToggle from './CharacterClassToggle';\nimport ResetProgress from './ResetProgress';\n\nconst Settings = (props) => {\n    const {\n        pronunciationType,\n        rate,\n        thaiVoice,\n        thaiVoices,\n        englishVoice,\n        englishVoices,\n        words,\n        practiceWordLimit,\n        testingWordLimit,\n        practiceOrder,\n        practiceAllAtOnce,\n        showCharacterClasses,\n        resetProgressVisible,\n\n        changePracticeDisplayOrder,\n        changePronunciationType,\n        changePracticeWordLimit,\n        changeTestingWordLimit,\n        setRate,\n        setThaiVoice,\n        setEnglishVoice,\n        toggleCharacterClasses,\n        resetProgress,\n        toggleResetProgress,\n    } = props;\n\n    return <div className=\"settings\">\n        <h1>Settings</h1>\n        <section>\n            <VoiceSelector heading=\"Thai voices\" voices={ thaiVoices } selectedVoice={ thaiVoice } onSelectVoice={ setThaiVoice } />\n            <VoiceSelector heading=\"English voices\" voices={ englishVoices } selectedVoice={ englishVoice } onSelectVoice={ setEnglishVoice } />\n            <aside>If you see no voices above, try reloading the page now. That usually solves the problem.</aside>\n            <aside>Don&apos;t see a Thai voice? Try googling on how to install <strong>Thai voice support</strong> on your specific device.</aside>\n            <aside>Android users may see multiple available voices, when only one is ever used. I don&apos;t know why this happens or how to fix it.</aside>\n        </section>\n        <section>\n            <RateSelector value={ rate } onChange={setRate} />\n        </section>\n        <section className=\"practice-order\">\n            <PracticeOrderSelector changePracticeDisplayOrder={ changePracticeDisplayOrder } practiceWordLimit={ practiceWordLimit } practiceOrder={ practiceOrder } practiceAllAtOnce={ practiceAllAtOnce } />\n        </section>\n        <section>\n            <CharacterClassToggle onToggle={ toggleCharacterClasses } showCharacterClasses={ showCharacterClasses } />\n        </section>\n        <section>\n            <RangedNumberSelector heading=\"Ideal number of words to practice at once\" min={5} max={30} value={ practiceWordLimit } onChange={ changePracticeWordLimit } />\n        </section>\n        <section>\n            <RangedNumberSelector heading=\"Maximum number of words to test at once\" min={5} max={30} value={ testingWordLimit } onChange={ changeTestingWordLimit } />\n        </section>\n        <section>\n            <PronunciationSelector pronunciationType={ pronunciationType } changePronunciationType={ changePronunciationType } words={ words } />\n        </section>\n        <section>\n            <ResetProgress toggleResetProgress={ toggleResetProgress } resetProgress={ resetProgress } resetProgressVisible={ resetProgressVisible } />\n        </section>\n    </div>;\n};\n\nconst voicePropType = PropTypes.shape({\n    name: PropTypes.string,\n});\n\nSettings.propTypes = {\n    practiceAllAtOnce: PropTypes.bool.isRequired,\n    practiceOrder: PropTypes.array.isRequired,\n    practiceWordLimit: PropTypes.number.isRequired,\n    testingWordLimit: PropTypes.number.isRequired,\n    pronunciationType: PropTypes.string.isRequired,\n    rate: PropTypes.number.isRequired,\n    thaiVoice: voicePropType,\n    englishVoice: voicePropType,\n    thaiVoices: PropTypes.arrayOf(voicePropType).isRequired,\n    englishVoices: PropTypes.arrayOf(voicePropType).isRequired,\n    words: PropTypes.arrayOf(PropTypes.shape({\n        thai: PropTypes.string.isRequired,\n        ipa: PropTypes.string.isRequired,\n        paiboon: PropTypes.string.isRequired,\n    })).isRequired,\n    showCharacterClasses: PropTypes.bool.isRequired,\n    resetProgressVisible: PropTypes.bool.isRequired,\n\n    changePracticeDisplayOrder: PropTypes.func.isRequired,\n    changePronunciationType: PropTypes.func.isRequired,\n    changePracticeWordLimit: PropTypes.func.isRequired,\n    setRate: PropTypes.func.isRequired,\n    setThaiVoice: PropTypes.func.isRequired,\n    setEnglishVoice: PropTypes.func.isRequired,\n    changeTestingWordLimit: PropTypes.func.isRequired,\n    toggleCharacterClasses: PropTypes.func.isRequired,\n    toggleResetProgress: PropTypes.func.isRequired,\n    resetProgress: PropTypes.func.isRequired,\n};\n\nexport default Settings;","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport Settings from './Settings';\n\nimport '../../styles/css/Settings.css';\n\nconst mapStateToProps = ({\n    voice: {thaiVoice, thaiVoices, englishVoice, englishVoices, rate},\n    words: { words },\n    settings: { pronunciationType, practiceWordLimit, testingWordLimit, practiceOrder, practiceAllAtOnce, showCharacterClasses, resetProgressVisible },\n}) => ({\n    words,\n    englishVoice,\n    englishVoices,\n    thaiVoice,\n    thaiVoices,\n    rate,\n    pronunciationType,\n    practiceWordLimit,\n    testingWordLimit,\n    practiceOrder,\n    practiceAllAtOnce,\n    showCharacterClasses,\n    resetProgressVisible,\n});\n\nexport default connect(mapStateToProps, operations)(Settings);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getDayOfEpoch, memoize } from '../../services/Utils';\nimport { filterByRoughStatus, STATUS_PRACTICE } from '../../services/Leitner';\nimport WordsTable from '../WordsTable';\n\nconst getFilteredWordsList = memoize(filterByRoughStatus);\n\nconst Preview = ({ practiceWordLimit, words}) => {\n    const visibleWords = getFilteredWordsList(words, getDayOfEpoch(new Date()), [STATUS_PRACTICE]).slice(0, practiceWordLimit);\n\n    return <div className=\"preview\">\n        <Link className=\"start-button\" to=\"/practice/full\">Start</Link>\n        <section>\n            <h2>Words for this session</h2>\n            <WordsTable visibleWords={ visibleWords } showPreview={false} showProgress={ false } />\n        </section>\n    </div>;\n};\n\nPreview.propTypes = {\n    words: PropTypes.array.isRequired,\n    practiceWordLimit: PropTypes.number.isRequired,\n};\n\nexport default Preview;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../../services/Utils';\nimport { PRONUNCIATIONTYPE_PAIBOON } from '../../services/WordManager';\nimport PlayButton from '../common/PlayButton';\nimport Thai from '../common/ColorizedThai';\n\nconst Line = ({ index, word, stage, practiceAllAtOnce, pronunciationType, prop, showCharacterClasses, type }) => {\n    const isPronunciation = type === 'pronunciation';\n    const isThai = type === 'thai';\n    const visible = practiceAllAtOnce || stage >= index;\n\n    const contents = isPronunciation ? word[pronunciationType === PRONUNCIATIONTYPE_PAIBOON ? 'paiboon': 'ipa'] :\n        isThai && showCharacterClasses ? <Thai word={word} /> :\n        word[type];\n\n    const classes = classNames({\n        visible,\n        [prop]: true,\n    });\n    const playButton = isPronunciation ? <PlayButton word={word} /> : null;\n    return <div className={classes}>{contents} {playButton}</div>;\n};\nLine.propTypes = {\n    index: PropTypes.number.isRequired,\n    practiceAllAtOnce: PropTypes.bool,\n    pronunciationType: PropTypes.string,\n    prop: PropTypes.string,\n    showCharacterClasses: PropTypes.bool,\n    stage: PropTypes.number.isRequired,\n    type: PropTypes.string.isRequired,\n    word: PropTypes.object.isRequired,\n};\n\nexport default Line;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Line from './Line';\nimport { classNames } from '../../services/Utils';\n\nconst Card = ({ word, onClick, pronunciationType, stage, practiceOrder, practiceAllAtOnce, showCharacterClasses }) => {\n    const lines = practiceOrder.map((prop, index) => <Line key={prop} index={index} type={practiceOrder[index]} practiceAllAtOnce={practiceAllAtOnce} pronunciationType={pronunciationType} stage={stage} word={word} showCharacterClasses={ showCharacterClasses } prop={ prop } />);\n    const nextButton = stage > 1 ? '»' : '›';\n    return <div onClick={ onClick } className={ classNames({ card: true, practiceAllAtOnce }) }>\n        { lines }\n        <span className=\"next-button\">{ nextButton }</span>\n    </div>;\n};\n\nCard.propTypes = {\n    word: PropTypes.shape({\n        term: PropTypes.string.isRequired,\n        thai: PropTypes.string.isRequired,\n        ipa: PropTypes.string.isRequired,\n        paiboon: PropTypes.string.isRequired,\n    }).isRequired,\n    pronunciationType: PropTypes.string.isRequired,\n    stage: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    practiceAllAtOnce: PropTypes.bool.isRequired,\n    practiceOrder: PropTypes.arrayOf(PropTypes.string).isRequired,\n    showCharacterClasses: PropTypes.bool.isRequired,\n};\n\nexport default Card;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../../services/Utils';\n\nimport '../../styles/css/Hint.css';\n\nconst Hint = ({ children, toggleHint, title, hintVisible }) => {\n    const classes = classNames({\n        hint: true,\n        visible: hintVisible\n    });\n\n    return <div className={ classes }>\n        <div className=\"overlay\">\n            <div className=\"background\" onClick={ toggleHint }></div>\n            <div className=\"content\">\n                <div className=\"left-side\">\n                ℹ\n                </div>\n                <div className=\"right-side\">\n                    <h2>{ title }</h2>\n                    <section>{ children }</section>\n                </div>\n            </div>\n        </div>\n        <button onClick={ toggleHint }>?</button>\n    </div>;\n};\n\n\nHint.propTypes = {\n    children: PropTypes.any.isRequired,\n    toggleHint: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    hintVisible: PropTypes.bool.isRequired,\n};\nHint.defaultProps = {\n    title: 'Hint'\n};\n\nexport default Hint;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Card from './Card';\nimport Hint from '../common/Hint';\nimport { say, LANGUAGE_THAI } from '../../services/Voices';\n\nexport default class CardContainer extends Component {\n    constructor(...args) {\n        super(...args);\n\n        this.cardsSeen = 0;\n\n        this.onKey = this.onKey.bind(this);\n\n        document.addEventListener('keydown', this.onKey);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentIndex !== this.props.currentIndex) this.cardsSeen += 1;\n    }\n    componentWillUnmount() {\n        this.props.registerPracticeEnd('full', this.cardsSeen);\n        document.removeEventListener('keydown', this.onKey);\n    }\n    onKey({code}) {\n        const { advancePractice, practiceAllAtOnce, nudgePractice} = this.props;\n\n        if (!practiceAllAtOnce && (code === 'Space' || code === 'ArrowDown' || code === 'Enter')) nudgePractice();\n        else if (code === 'ArrowRight') advancePractice(1);\n        else if (code === 'ArrowLeft') advancePractice(-1);\n    }\n    render() {\n        const { pronunciationType, queue, currentIndex, currentStage, nudgePractice, practiceAllAtOnce, practiceOrder, showCharacterClasses } = this.props;\n        const word = queue[currentIndex];\n\n        if (!word) return null;\n        if (practiceAllAtOnce || practiceOrder[currentStage] === 'pronunciation') setTimeout(() => say(LANGUAGE_THAI, word), 300);\n\n        const card = <CSSTransition key={word.id} timeout={500} classNames=\"card\">\n            <Card word={ queue[currentIndex] } stage={ currentStage } onClick={ () => nudgePractice(practiceAllAtOnce) } pronunciationType={pronunciationType} practiceAllAtOnce={ practiceAllAtOnce } practiceOrder={ practiceOrder } showCharacterClasses={ showCharacterClasses } />\n        </CSSTransition>;\n\n        return <Fragment>\n            <Hint { ...this.props } title=\"Instructions\">\n                <p>Press [Space] or [Enter] to advance</p>\n                <p>Press [Right Arrow] to skip to the next word.</p>\n                <p>Press [Left Arrow] to jump back to the last word.</p>\n                <p>Go to settings to change the number of words to practice at once.</p>\n            </Hint>\n            <TransitionGroup className=\"cards\">\n                { card }\n            </TransitionGroup>\n        </Fragment>;\n    }\n}\n\nCardContainer.propTypes = {\n    currentIndex: PropTypes.number.isRequired,\n    currentStage: PropTypes.number.isRequired,\n    hintVisible: PropTypes.bool.isRequired,\n    practiceAllAtOnce: PropTypes.bool.isRequired,\n    practiceOrder: PropTypes.arrayOf(PropTypes.string).isRequired,\n    practiceWordLimit: PropTypes.number.isRequired,\n    pronunciationType: PropTypes.string.isRequired,\n    showCharacterClasses: PropTypes.bool.isRequired,\n    queue: PropTypes.array.isRequired,\n    words: PropTypes.array.isRequired,\n\n    advancePractice: PropTypes.func.isRequired,\n    nudgePractice: PropTypes.func.isRequired,\n    closePractice: PropTypes.func.isRequired,\n    toggleHint: PropTypes.func.isRequired,\n    registerPracticeEnd: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Preview from './Preview';\nimport CardContainer from './CardContainer';\n\nclass Practice extends Component {\n    componentDidMount() {\n        const { practiceWordLimit, seedPractice, words } = this.props;\n\n        seedPractice(words, practiceWordLimit);\n    }\n    componentWillUnmount() {\n        this.props.closePractice();\n    }\n\n    render() {\n        const { match: { params }, ...props } = this.props;\n        const subview = params.type || null;\n\n        return (<div className=\"practice\">\n        <Link className=\"test-button\" to=\"/test/current\">Test now <span className=\"icon\">〉</span></Link>\n        <h1>Practice</h1>\n        {\n            subview === 'full' ? <CardContainer { ...props } />\n            : <Preview { ...props } />\n        }\n    </div>);\n\n    }\n}\n\nPractice.propTypes = {\n    match: PropTypes.shape({ params: PropTypes.object.isRequired }).isRequired,\n    practiceWordLimit: PropTypes.number.isRequired,\n    seedPractice: PropTypes.func.isRequired,\n    closePractice: PropTypes.func.isRequired,\n    words: PropTypes.array.isRequired,\n};\n\nexport default Practice;","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport Practice from './Practice';\n\nimport '../../styles/css/Practice.css';\n\nconst mapStateToProps = ({ words, settings, view }) => ({\n    currentIndex: words.currentIndex,\n    currentStage: words.currentStage,\n    hintVisible: view.hintVisible,\n    queue: words.queue,\n    words: words.words,\n    practiceWordLimit: settings.practiceWordLimit,\n    pronunciationType: settings.pronunciationType,\n    practiceOrder: settings.practiceOrder,\n    practiceAllAtOnce: settings.practiceAllAtOnce,\n    showCharacterClasses: settings.showCharacterClasses,\n    subview: view.subview\n});\n\nexport default connect(mapStateToProps, operations)(Practice);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { getCurrentPracticeWords, getOutstandingWords, getMasteredWords } from '../../services/Leitner';\nimport { getDayOfEpoch } from '../../services/Utils';\n\nconst getCount = words => words.length || 0;\n\nconst TestSelector = ({ testingWordLimit, words }) => {\n    const currentWords = getCurrentPracticeWords(words);\n    const outstandingWords = getOutstandingWords(words, getDayOfEpoch());\n    const masteredWords = getMasteredWords(words);\n\n    const outstandingCount = getCount(outstandingWords);\n    const currentCount = getCount(currentWords);\n    const masteredCount = getCount(masteredWords);\n\n    if (!outstandingCount && !currentCount && !masteredCount) {\n        return <div className=\"navigation\">\n            <h1>Nothing to test</h1>\n            <h2>You need to <Link to=\"/practice\">practice</Link> before you can test</h2>\n        </div>;\n    }\n\n    if (!outstandingCount && !currentCount) {\n        return <div className=\"navigation\">\n            <h1>Nothing to test.</h1>\n            <h2>You have mastered all words</h2>\n        </div>;\n    }\n\n    return <div className=\"navigation\">\n        <h1>Test</h1>\n        <h2>Select what you would like to test</h2>\n\n        { outstandingWords.length === 0\n            ? null\n            : <section><Link className=\"button\" to=\"/test/overdue\">Overdue ({ outstandingCount || 'none'})</Link></section>\n        }\n\n        { currentWords.length === 0\n            ? null\n            : <section><Link className=\"button\" to=\"/test/current\">Current ({ currentCount || 'none' })</Link></section>\n        }\n\n        <section>\n            <aside>According to your <Link to='/settings'>settings</Link>, tests will cover a maximum of { testingWordLimit } words at a time. It is important to set the right value. Too high and tests will seem tedious and you&apos;ll hate doing them. Too low, and they won&apos;t be a challenge.</aside>\n        </section>\n    </div>;\n};\nTestSelector.propTypes = {\n    setTestType: PropTypes.func.isRequired,\n    testingWordLimit: PropTypes.number.isRequired,\n    words: PropTypes.array.isRequired,\n};\n\nexport default withRouter(TestSelector);","import { connect } from 'react-redux';\nimport TestSelector from './TestSelector';\nimport { operations } from '../../store';\n\nimport '../../styles/css/Navigation.css';\n\nconst mapStateToProps = state => ({\n    testingWordLimit: state.settings.testingWordLimit,\n    words: state.words.words\n});\n\nconst { setTestType } = operations;\nexport default connect(mapStateToProps, { setTestType })(TestSelector);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isPronunciation, say, LANGUAGE_THAI } from '../../services/Voices';\nimport PlayButton from '../common/PlayButton';\n\n\nclass Question extends Component {\n    componentDidMount() {\n        const { property } = this.props;\n\n        this.speak = this.speak.bind(this);\n\n        if (isPronunciation(property)) setTimeout(this.speak, 500);\n    }\n    speak() {\n        const { word } = this.props;\n        say(LANGUAGE_THAI, word);\n    }\n    render() {\n        const { word, property } = this.props;\n        if (isPronunciation(property)) return <div className=\"question\">{ word[property] } <PlayButton word={word} /></div>;\n        return <div className=\"question\">{ word[property] }</div>;\n    }\n}\nQuestion.propTypes = {\n    word: PropTypes.object.isRequired,\n    property: PropTypes.string.isRequired,\n};\n\nexport default Question;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PlayButton from '../common/PlayButton';\nimport { isPronunciation } from '../../services/Voices';\n\nconst getClass = (word, selected, correct, isAnswered) => selected === null ? 'answer'\n    : isAnswered && word === correct ? 'answer correct'\n    : isAnswered && word === selected && word !== correct ? 'answer incorrect'\n    : isAnswered ? 'answer hidden'\n    : selected === word ? 'answer selected'\n    : selected === null ? 'answer'\n    : 'answer rejected';\n\nconst Answer = ({ word, property, onSelect, selected, correct, isAnswered }) => <div className={ getClass(word, selected, correct, isAnswered) } onClick={ onSelect }>\n    <span className={ property }>{ word[property] }</span>\n    { isPronunciation(property) ? <span className=\"play-button\"><PlayButton word={word} /></span> : null }\n</div>;\n\nconst wordShape = PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    term: PropTypes.string.isRequired,\n    thai: PropTypes.string.isRequired,\n});\nAnswer.propTypes = {\n    word: wordShape.isRequired,\n    property: PropTypes.string.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    selected: wordShape,\n    isAnswered: PropTypes.bool.isRequired,\n    correct: wordShape,\n};\nexport default Answer;","import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Advancement extends Component {\n    constructor(...args) {\n        super(...args);\n        this.defaultButtonRef = createRef();\n    }\n    componentDidUpdate() {\n        if (this.defaultButtonRef.current) this.defaultButtonRef.current.focus();\n    }\n    render() {\n        const { isAnswered, isCorrect, isLastQuestion, submitAnswer } = this.props;\n\n        if (isAnswered && isLastQuestion) return <div className=\"advancement\">\n            <button className={ isCorrect ? 'default success' : 'default fail'} ref={ this.defaultButtonRef } onClick={ () => submitAnswer(isCorrect) }>View Results</button>\n        </div>;\n        if (isAnswered && isCorrect) return <div className=\"advancement\">\n            <button className=\"default success\" ref={ this.defaultButtonRef } onClick={ () => submitAnswer(isCorrect) }>Very good! Next</button>\n        </div>;\n\n        if (isAnswered) return <div className=\"advancement\">\n            <button className=\"small-text\" onClick={ () => submitAnswer(isCorrect) }>Mark as correct anyway</button>\n            <button className=\"default fail\" ref={ this.defaultButtonRef } onClick={ () => submitAnswer(isCorrect) }>Next</button>\n        </div>;\n\n        return <div className=\"advancement\">\n            <button className=\"default\" onClick={ () => submitAnswer(null) }>Not sure / Skip</button>\n        </div>;\n\n    }\n}\n\nAdvancement.propTypes = {\n    index: PropTypes.number.isRequired,\n    isCorrect: PropTypes.bool,\n    isAnswered: PropTypes.bool.isRequired,\n    isLastQuestion: PropTypes.bool.isRequired,\n    submitAnswer: PropTypes.func.isRequired,\n};\n\nexport default Advancement;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question';\nimport Answer from './Answer';\nimport Advancement from './Advancement';\n\nimport { sortBySimilarity, shuffle } from '../../services/Utils';\n\nconst stageTestTargets = [\n    { question: 'thai', answer: 'pronunciation' },\n    { question: 'pronunciation', answer: 'thai' },\n];\n\nconst keyToProperty = (key, pronunciationType) => {\n    if (key === 'pronunciation') return pronunciationType === 'IPA' ? 'ipa' : 'paiboon';\n    return key;\n};\n\nclass Challenge extends PureComponent {\n    constructor(...args) {\n        super(...args);\n\n        let { queue, index, stage, words, pronunciationType } = this.props;\n        let property = keyToProperty(stageTestTargets[stage].answer, pronunciationType);\n\n        const answers  = shuffle([...sortBySimilarity(queue[index], property, words).slice(0, 8), queue[index]]);\n        this.state = {\n            property,\n            answers,\n            selectedAnswer: null,\n        };\n        this.answer = this.answer.bind(this);\n    }\n    answer(answer) {\n        if (this.state.selectedAnswer) return;\n\n        this.setState({ selectedAnswer: answer });\n    }\n    render() {\n        const { queue, index, stage, pronunciationType, submitAnswer } = this.props;\n        const { answers, property, selectedAnswer } = this.state;\n        const correctAnswer = queue[index];\n        const isAnswered = selectedAnswer !== null;\n\n        const visibleAnswers = answers.map(word =>\n            <Answer\n                key={ word.id }\n                isAnswered={ isAnswered }\n                correct={ correctAnswer }\n                selected={ selectedAnswer }\n                word={ word }\n                property={ property }\n                pronunciationType={ pronunciationType }\n                onSelect={ () => this.answer(word) }\n            /> );\n\n        const isCorrect = correctAnswer === selectedAnswer;\n\n        return <div className=\"challenge\">\n            <Question word={ correctAnswer } property={ keyToProperty(stageTestTargets[stage].question, pronunciationType) } />\n\n            <div className=\"answers\">{ visibleAnswers }</div>\n\n            <Advancement isLastQuestion={index === queue.length - 1} isCorrect={ isCorrect } index={ index } isAnswered={ isAnswered } submitAnswer={ submitAnswer } />\n        </div>;\n\n    }\n}\n\nChallenge.propTypes = {\n    queue: PropTypes.array.isRequired,\n    index: PropTypes.number.isRequired,\n    stage: PropTypes.number.isRequired,\n    words: PropTypes.array.isRequired,\n    pronunciationType: PropTypes.string.isRequired,\n    submitAnswer: PropTypes.func.isRequired,\n};\nexport default Challenge;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Progress = ({ index, queue }) => {\n    const style={ width: `${ Math.floor(1000 * index / queue.length) / 10 }%` };\n    const className = `progress stage-${ Math.floor( 3 * index / queue.length ) }`;\n    return <div className={ className }><div style={style } className=\"bar\"></div></div>;\n};\n\nProgress.propTypes = {\n    index: PropTypes.number.isRequired,\n    queue: PropTypes.array.isRequired,\n};\n\nexport default Progress;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Challenge from './Challenge';\nimport Progress from './Progress';\n\nconst Quiz = (props) => {\n    return <div className=\"test\">\n        <TransitionGroup className=\"content\">\n            <CSSTransition timeout={400} key={ props.index } classNames=\"challenge-container\">\n                <Challenge key={ props.index } {...props} />\n            </CSSTransition>\n        </TransitionGroup>\n        <Progress {...props} />\n    </div>;\n\n};\n\nQuiz.propTypes = {\n    index: PropTypes.number.isRequired,\n};\nexport default Quiz;","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport Quiz from './Quiz';\n\nimport '../../styles/css/Quiz.css';\n\nconst mapStateToProps = state => ({\n    pronunciationType: state.settings.pronunciationType,\n    testWords: state.test.testWords,\n    queue: state.test.queue,\n    type: state.test.type,\n    stage: state.test.stage,\n    isComplete: state.test.isComplete,\n    submitAnswer: state.test.submitAnswer,\n    index: state.test.index,\n    words: state.words.words,\n});\n\nexport default connect(mapStateToProps, operations)(Quiz);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NONBREAKINGSPACE = ' '; // Warning: Unicode character. This is not a normal space.\nconst getStyle = score => score === 1 ? 'correct' : score === -1 ? 'incorrect' : null;\nconst getText = score => score === 1 ? '✓' : score === -1 ? '✕' : NONBREAKINGSPACE;\n\nconst Score = ({ scores, index }) => {\n    const score = scores[index];\n    const className = getStyle(score);\n    const text = getText(score);\n\n    return <span className={className}>{ text }</span>;\n};\n\nScore.propTypes = {\n    index: PropTypes.number.isRequired,\n    scores: PropTypes.arrayOf(PropTypes.number).isRequired\n};\n\nexport default Score;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Score from './Score';\n\nconst Item = ({ word, aspectScores }) => {\n    return <div className=\"result\">\n        <div>{word.thai}</div>\n        <div><Score index={0} scores={ aspectScores } /></div>\n        <div><Score index={1} scores={ aspectScores } /></div>\n    </div>;\n};\n\nItem.propTypes = {\n    aspectScores: PropTypes.array.isRequired,\n    word: PropTypes.object.isRequired,\n};\n\nexport default Item;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Item from './Item';\n\nconst TestResult = ({saveTest, testWords, scores}) => {\n    const items = testWords.map(testWord => {\n        const aspectScores = scores.reduce((aspectScores, { id, score, aspect }) => {\n            if (id === testWord.id) aspectScores[aspect] = score;\n\n            return aspectScores;\n        }, [0, 0]);\n\n        return <Item key={ testWord.id } word={ testWord } aspectScores={ aspectScores } />;\n    });\n\n    return <div className=\"test-results\">\n        <h1>Results</h1>\n        <section>\n            <button className=\"save-button\" onClick={ () => saveTest(scores) }>Save results</button>\n        </section>\n        <section className=\"items\">\n            <div className=\"result header\">\n                <div></div>\n                <div>Reading</div>\n                <div>Comprehension</div>\n            </div>\n            { items }\n        </section>\n    </div>;\n};\n\nTestResult.propTypes = {\n    pronunciationType: PropTypes.string.isRequired,\n    queue: PropTypes.array.isRequired,\n    scores: PropTypes.arrayOf(PropTypes.object).isRequired,\n    testWords: PropTypes.array.isRequired,\n    saveTest: PropTypes.func.isRequired,\n};\n\nexport default TestResult;\n","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport TestResults from './TestResults';\n\nimport '../../styles/css/TestResults.css';\n\nconst mapStateToProps = state => ({\n    testWords: state.test.testWords,\n    scores: state.test.scores,\n    queue: state.test.queue,\n    pronunciationType: state.settings.pronunciationType,\n});\nexport default connect(mapStateToProps, operations)(TestResults);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport TestSelector from '../TestSelector';\nimport Quiz from '../Quiz';\nimport TestResults from '../TestResults';\nimport { TEST_TYPECURRENT, TEST_TYPEOVERDUE } from '../../services/Leitner';\n\nclass Test extends Component {\n    componentDidMount() {\n        const { history, match: { params }, setTestType } = this.props;\n\n        if (params.type === 'current') setTestType(TEST_TYPECURRENT) || history.replace('/test');\n        else if (params.type === 'overdue') setTestType(TEST_TYPEOVERDUE) || history.replace('/test');\n        else history.replace('/test');\n    }\n    componentDidUpdate() {\n        if (this.props.isSaved) this.props.history.push('/progress');\n    }\n    componentWillUnmount() {\n        this.props.clearTest();\n    }\n    render() {\n        const { isComplete, queue } = this.props;\n\n        if (isComplete) return <TestResults />;\n        if (queue.length === 0) return <TestSelector />;\n\n        return <Quiz />;\n    }\n}\n\nTest.propTypes = {\n    isComplete: PropTypes.bool,\n    isSaved: PropTypes.bool,\n    queue: PropTypes.array,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n        replace: PropTypes.func.isRequired\n    }),\n    match: PropTypes.shape({\n        params: PropTypes.object\n    }),\n    setTestType: PropTypes.func.isRequired,\n    clearTest: PropTypes.func.isRequired,\n};\n\nexport default withRouter(Test);","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport Test from './Test';\n\nconst mapStateToProps = ({ test: { isComplete, isSaved, queue }, view: { hintVisible }}) => ({\n    hintVisible,\n    isComplete,\n    isSaved,\n    queue,\n});\n\nexport default connect(mapStateToProps, operations)(Test);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PlayButton from '../common/PlayButton';\n\nconst Examples = ({ examples }) => <div className=\"examples\">\n    { examples.map((example, index) => <span key={index}>{ example } <PlayButton word={{ thai: example }} /></span>) }\n</div>;\n\nExamples.propTypes = {\n    examples: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default Examples;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { PRONUNCIATIONTYPE_IPA } from '../../services/WordManager';\nimport Examples from './Examples';\nimport PlayButton from '../common/PlayButton';\n\nconst Vowel = ({ vowel, pronunciationType, onNext, onPrev  }) => {\n    return <Fragment>\n        <div><div className=\"prev navigation-button\" onClick={ () => onPrev(vowel) } title=\"Previous (←)\">〈</div></div>\n        <div className=\"main-content\">\n            <h1>{ vowel.vowel }</h1>\n            <h2>{ pronunciationType === PRONUNCIATIONTYPE_IPA ? vowel.ipa : vowel.paiboon } <PlayButton word={{thai: vowel.vowel}} /></h2>\n            <Examples examples={ vowel.examples } />\n        </div>\n        <div><div className=\"next navigation-button\" onClick={ () => onNext(vowel) } title=\"Next (→, space)\">〉</div></div>\n    </Fragment>;\n};\n\nVowel.propTypes = {\n    vowel: PropTypes.shape({\n        vowel: PropTypes.string.isRequired,\n        examples: PropTypes.arrayOf(PropTypes.string).isRequired,\n        ipa: PropTypes.string.isRequired,\n        paiboon: PropTypes.string.isRequired\n    }).isRequired,\n    pronunciationType: PropTypes.string.isRequired,\n    onNext: PropTypes.func.isRequired,\n    onPrev: PropTypes.func.isRequired,\n};\n\nexport default Vowel;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass VowelButton extends PureComponent {\n    constructor(...args) {\n        super(...args);\n        this.onClick = this.onClick.bind(this);\n    }\n    onClick({ target }) {\n        const { onClick } = this.props;\n        target.blur();\n        onClick();\n    }\n    render() {\n        const { vowel, visibleVowel } = this.props;\n        return <button className={ vowel === visibleVowel ? 'selected' : null } onClick={ this.onClick }>{vowel.vowel}</button>;\n    }\n}\n\nVowelButton.propTypes = {\n    vowel: PropTypes.shape({ vowel: PropTypes.string.isRequired }).isRequired,\n    visibleVowel: PropTypes.object,\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default VowelButton;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Vowel from './Vowel';\nimport VowelButton from './VowelButton';\nimport { sayWords, LANGUAGE_THAI } from '../../services/Voices';\n\nclass Vowels extends Component {\n    constructor(...args) {\n        super(...args);\n\n        this.onKey = this.onKey.bind(this);\n    }\n    componentDidMount() {\n        this.props.initializeVowels();\n        document.addEventListener('keydown', this.onKey);\n    }\n    componentWillUnmount(){\n        this.props.clearSounds();\n        document.removeEventListener('keydown', this.onKey);\n    }\n    onKey({ code }) {\n        const { showNextVowel, showPrevVowel, visibleVowel } = this.props;\n\n        if (!visibleVowel) return;\n\n        if ((code === 'Space' || code === 'ArrowRight')) showNextVowel(visibleVowel);\n        else if (code === 'ArrowLeft') showPrevVowel(visibleVowel);\n    }\n    componentDidUpdate(props) {\n        const { visibleVowel } = this.props;\n        if (visibleVowel && props.visibleVowel !== visibleVowel) {\n            const { examples } = visibleVowel;\n            sayWords(LANGUAGE_THAI, examples);\n        }\n    }\n    render() {\n        const { pronunciationType, showVowel, visibleVowel, vowels, showNextVowel, showPrevVowel  } = this.props;\n        const buttons = vowels.map((vowel, index) => <VowelButton key={index} vowel={ vowel } visibleVowel={ visibleVowel } onClick={ () => showVowel(vowel) }  />);\n        return <div className=\"vowels\">\n            <section className=\"visible-vowel\">\n                { visibleVowel ? <Vowel vowel={ visibleVowel } pronunciationType={ pronunciationType } onNext={ showNextVowel } onPrev={ showPrevVowel } /> : ' ' }\n            </section>\n            <div className=\"buttons\">{buttons}</div>\n        </div>;\n    }\n}\n\nVowels.propTypes = {\n    clearSounds: PropTypes.func.isRequired,\n    initializeVowels: PropTypes.func.isRequired,\n    pronunciationType: PropTypes.string.isRequired,\n    showVowel: PropTypes.func.isRequired,\n    visibleVowel: PropTypes.shape({\n        examples: PropTypes.arrayOf(PropTypes.string)\n    }),\n    vowels: PropTypes.array.isRequired,\n    showNextVowel: PropTypes.func.isRequired,\n    showPrevVowel: PropTypes.func.isRequired,\n};\n\nexport default Vowels;","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport Vowels from './Vowels';\n\nimport '../../styles/css/Vowels.css';\n\nconst mapStateToProps = ({ sounds, settings }) => ({\n    pronunciationType: settings.pronunciationType,\n    visibleVowel: sounds.visibleVowel,\n    vowels: sounds.vowels\n});\n\nexport default connect(mapStateToProps, operations)(Vowels);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { memoize } from '../../services/Utils';\n\nconst sortKeys = (a, b) => {\n    if (a === 'Other') return 1;\n    if (b === 'Other') return -1;\n    return a > b ? 1 : -1;\n};\nconst getSortedKeys = memoize((consontantKeys) => Object.keys(consontantKeys).sort(sortKeys) );\n\nconst CategoryPicker = ({ consonantKeys, showConsonantsByKey, visibleConsonantKey }) => {\n    let headings = getSortedKeys(consonantKeys).map(key => <li key={key} className={ key === visibleConsonantKey ? 'selected' : null } onClick={ () => showConsonantsByKey(key) }>{key}</li>);\n    return <nav className=\"category-picker\">\n        <ol>\n            <li className={ visibleConsonantKey || 'selected' } onClick={ () => showConsonantsByKey(null) }>All</li>\n            { headings }\n        </ol>\n    </nav>;\n};\n\nCategoryPicker.propTypes = {\n    consonantKeys: PropTypes.object.isRequired,\n    showConsonantsByKey: PropTypes.func.isRequired,\n    visibleConsonantKey: PropTypes.string,\n};\n\nexport default CategoryPicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { memoize } from '../../services/Utils';\nimport { PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON } from '../../services/WordManager';\nimport ColorizedThai from '../common/ColorizedThai';\nimport PlayButton from '../common/PlayButton';\n\nconst getConsonants = memoize((consonants, visibleConsonants) => Object.keys(consonants)\n    .filter(key => !visibleConsonants || visibleConsonants.indexOf(key) > -1)\n    .map(character => ({ character, consonant: consonants[character] }) )\n);\n\nconst ConsonantList = ({ consonantKeys, consonants, visibleConsonantKey, pronunciationType }) => {\n    const items = getConsonants(consonants, consonantKeys[visibleConsonantKey])\n        .map(({character, consonant: [,,ipa, paiboon, thai]}) => <div key={ character }>\n            <span><ColorizedThai word={{ thai: character }} /></span>\n            <span>{ pronunciationType === PRONUNCIATIONTYPE_IPA ? ipa : paiboon }</span>\n            <span>{ thai }</span>\n            <span><PlayButton word={{ thai }} /></span>\n        </div>);\n\n    return <div className=\"list\">\n        {items}\n    </div>;\n};\n\nConsonantList.propTypes = {\n    consonantKeys: PropTypes.object,\n    consonants: PropTypes.object.isRequired,\n    visibleConsonantKey: PropTypes.string,\n    pronunciationType: PropTypes.oneOf([ PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON ]),\n};\n\nexport default ConsonantList;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON } from '../../services/WordManager';\nimport CategoryPicker from './CategoryPicker';\nimport ConsonantList from './ConsonantList';\n\nclass Consonants extends Component {\n    constructor(...args) {\n        super(...args);\n\n        this.state = {\n            filter: null\n        };\n    }\n    componentDidMount() {\n        this.props.initializeConsonants();\n    }\n    componentWillUnmount() {\n        this.props.clearSounds();\n    }\n\n    render() {\n        const { consonantKeys, consonants, pronunciationType, showConsonantsByKey, visibleConsonantKey } = this.props;\n\n        return <div className=\"consonants\">\n            <h1>All consonants</h1>\n            <CategoryPicker consonantKeys={ consonantKeys } showConsonantsByKey={ showConsonantsByKey } visibleConsonantKey={ visibleConsonantKey } />\n            <ConsonantList consonants={consonants} consonantKeys={consonantKeys} visibleConsonantKey={visibleConsonantKey} pronunciationType={ pronunciationType } />\n        </div>;\n    }\n}\n\nConsonants.propTypes = {\n    clearSounds: PropTypes.func.isRequired,\n    consonantKeys: PropTypes.object,\n    consonants: PropTypes.object.isRequired,\n    initializeConsonants: PropTypes.func.isRequired,\n    pronunciationType: PropTypes.oneOf([ PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON ]).isRequired,\n    showConsonantsByKey: PropTypes.func.isRequired,\n    visibleConsonantKey: PropTypes.string,\n};\n\nexport default Consonants;","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport Consonants from './Consonants';\n\nimport '../../styles/css/Consonants.css';\n\nconst mapStateToProps = ({ settings: { pronunciationType }, sounds: { consonantKeys, consonants, visibleConsonantKey }}) => ({\n    consonantKeys,\n    consonants,\n    pronunciationType,\n    visibleConsonantKey,\n});\n\nexport default connect(mapStateToProps, operations)(Consonants);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ConfusionPicker = ({ confusions, visibleConfusion, showConfusionByIndex }) => {\n    let headings = confusions.map((confusion, index) => <li key={index} className={ index === visibleConfusion ? 'selected' : null } onClick={ () => showConfusionByIndex(index) }>{confusion[0]}</li>);\n\n    return <nav className=\"confusion-picker\">\n        <ol>{ headings }</ol>\n    </nav>;\n\n};\n\nConfusionPicker.propTypes = {\n    confusions: PropTypes.array,\n    visibleConfusion: PropTypes.number,\n    showConfusionByIndex: PropTypes.func.isRequired,\n\n};\n\nexport default ConfusionPicker;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON } from '../../services/WordManager';\nimport { Link } from 'react-router-dom';\nimport PlayButton from '../common/PlayButton';\n\nconst ConfusionDetail = ({confusions, visibleConfusion, consonants, pronunciationType }) => {\n    const confusedConsonants = confusions[visibleConfusion]\n        .map(character => ({ character, consonants: consonants[character]}))\n        .map((({character, consonants: [,,ipa,paiboon,thai]}) => <div key={ character }>\n            <span>{ character }</span>\n            <span>{ pronunciationType === PRONUNCIATIONTYPE_IPA ? ipa : paiboon }</span>\n            <span>{ thai }</span>\n            <span><PlayButton word={{ thai }} /></span>\n        </div>));\n\n\n    return <div className=\"detail\">\n        <div className=\"characters\">{ confusedConsonants }</div>\n        <Link className=\"drill-button\" to={ `/basics/consonants/confusion/drill-${ visibleConfusion }`}>Drill <span className=\"icon\">〉</span></Link>\n    </div>;\n};\n\nConfusionDetail.propTypes = {\n    confusions: PropTypes.arrayOf(PropTypes.array),\n    consonants: PropTypes.object,\n    pronunciationType: PropTypes.oneOf([PRONUNCIATIONTYPE_IPA, PRONUNCIATIONTYPE_PAIBOON]).isRequired,\n    visibleConfusion: PropTypes.number,\n};\n\nexport default ConfusionDetail;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../../services/Utils';\n\nconst DrillAnswer = ({ correctAnswer, index, mistakes, onSelect, possibleAnswer }) => {\n    const correct = correctAnswer === index;\n    const incorrect = mistakes.indexOf(index) > -1;\n\n    const onClick = incorrect ? null : onSelect;\n\n    const classes = classNames({\n        [`answer-${ index }`]: true,\n        incorrect,\n        correct,\n    });\n\n    return <h3 onClick={ onClick } className={ classes }>{ possibleAnswer }</h3>;\n};\n\nDrillAnswer.propTypes = {\n    correctAnswer: PropTypes.number,\n    index: PropTypes.number.isRequired,\n    mistakes: PropTypes.arrayOf(PropTypes.number).isRequired,\n    possibleAnswer: PropTypes.string.isRequired,\n\n    onSelect: PropTypes.func.isRequired,\n};\n\nexport default DrillAnswer;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { makeUniqueRandomSamplingIncludingValue, buildRandomizedValuesQueue, wait } from '../../services/Utils';\nimport { PRONUNCIATIONTYPE_PAIBOON } from '../../services/WordManager';\nimport DrillAnswer from './DrillAnswer';\nimport Hint from '../common/Hint';\n\nconst makeQueue = buildRandomizedValuesQueue(5);\n\nconst DIRECTION_MAP = {\n    ArrowLeft: 0,\n    ArrowRight: 1,\n    ArrowUp: 2,\n    ArrowDown: 3,\n};\n\nlet getPossibleAnswers = v => [v]; // This is overridden in the constructor\n\nclass Drill extends PureComponent {\n    constructor(...args) {\n        super(...args);\n\n        const [props] = args;\n        const {consonants, match: { params }, confusions, pronunciationType, showConfusionByIndex } = props;\n\n        const visibleConfusion = parseInt(params.visibleConfusion, 10);\n        if (!confusions[visibleConfusion]) {\n            return null;\n        }\n\n        showConfusionByIndex(visibleConfusion);\n\n        const consonantsToDrill = confusions[visibleConfusion].map(char => ({\n            char,\n            pronunciation: consonants[char][pronunciationType === PRONUNCIATIONTYPE_PAIBOON ? 3 : 2],\n        }));\n\n        getPossibleAnswers = makeUniqueRandomSamplingIncludingValue(consonantsToDrill.map((consonant => consonant.pronunciation )), 4);\n        const queue = makeQueue(consonantsToDrill);\n\n        this.state = {\n            correctAnswer: null,\n            currentConsonant: null,\n            currentIndex: -1,\n            mistakes: [],\n            possibleAnswers: [],\n            queue,\n            waiting: false,\n        };\n\n        this.onKey = this.onKey.bind(this);\n        this.advance = this.advance.bind(this);\n        document.addEventListener('keydown', this.onKey);\n    }\n    componentDidMount() {\n        this.advance(1);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKey);\n    }\n    advance(direction=1) {\n        const { queue } = this.state;\n        const currentIndex = this.state.currentIndex + direction;\n        const currentConsonant = queue[(currentIndex + queue.length) % queue.length];\n        const possibleAnswers = getPossibleAnswers(currentConsonant.pronunciation);\n\n        this.setState({\n            correctAnswer: null,\n            currentIndex,\n            currentConsonant,\n            possibleAnswers,\n            mistakes: [],\n            waiting: false,\n        });\n    }\n    async selectAnswer(direction) {\n        let { hintVisible } = this.props;\n        let { correctAnswer, possibleAnswers, currentConsonant, mistakes, waiting } = this.state;\n\n        if (waiting || hintVisible) return;\n\n        let correct = possibleAnswers[direction] === currentConsonant.pronunciation;\n\n        if (correct) correctAnswer = direction;\n        else mistakes = [ ...mistakes, direction ];\n\n        this.setState({ correctAnswer, mistakes, waiting: true });\n\n        await wait(correct ? 750 : 500);\n\n        if (correct) this.advance(1);\n        else this.setState({ waiting: false });\n    }\n    onKey({code}) {\n        const direction = DIRECTION_MAP[code];\n\n        if (direction !== undefined) this.selectAnswer(direction);\n    }\n\n    render() {\n        const { correctAnswer, currentConsonant, possibleAnswers, currentIndex, mistakes } = this.state;\n\n        if (currentConsonant === null) return null;\n\n        const answers = possibleAnswers.map((possibleAnswer, index) => <DrillAnswer key={possibleAnswer} correctAnswer={ correctAnswer } mistakes={ mistakes } index={ index } onSelect={ () => this.selectAnswer(index) } possibleAnswer={ possibleAnswer } /> );\n        const card = (<CSSTransition key={currentIndex} timeout={500} classNames=\"card\">\n            <div>\n                <h1>{ currentConsonant.char }</h1>\n                { answers }\n            </div>\n        </CSSTransition>);\n\n        return <div className=\"drill\">\n            <Hint { ...this.props } title=\"Instructions\">\n                <p>Use your arrow keys to select the correct pronunciation.</p>\n                <p>You will advance automatically when you make the correct choice.</p>\n            </Hint>\n\n            <TransitionGroup className=\"container\">\n                { card }\n            </TransitionGroup>\n        </div>;\n    }\n}\n\nDrill.propTypes = {\n    confusions: PropTypes.array.isRequired,\n    consonants: PropTypes.object.isRequired,\n    hintVisible: PropTypes.bool.isRequired,\n    match: PropTypes.shape({ params: PropTypes.object }).isRequired,\n    pronunciationType: PropTypes.string.isRequired,\n\n    showConfusionByIndex: PropTypes.func.isRequired,\n};\n\nexport default Drill;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ConfusionPicker from './ConfusionPicker';\nimport ConfusionDetail from './ConfusionDetail';\nimport Drill from './Drill';\n\nclass Confusion extends Component {\n    componentDidMount() {\n        this.props.initializeConfusion();\n    }\n    componentWillUnmount() {\n        this.props.clearSounds();\n    }\n\n    render() {\n        const { confusions, visibleConfusion, showConfusionByIndex, confusionLoaded, match: { params={} } } = this.props;\n\n        if (confusions.length === 0) return null;\n        if (!isNaN(params.visibleConfusion)) return <Drill { ...this.props } />;\n\n        return <div className=\"confusion\">\n            <h1>Easily confused consonants</h1>\n            <ConfusionPicker confusions={ confusions } visibleConfusion={ visibleConfusion } showConfusionByIndex={ showConfusionByIndex } />\n\n            { confusionLoaded ? <ConfusionDetail { ...this.props } /> : null }\n        </div>;\n    }\n}\n\nConfusion.propTypes = {\n    confusionLoaded: PropTypes.bool.isRequired,\n    confusions: PropTypes.array,\n    match: PropTypes.shape({ params: PropTypes.object }).isRequired,\n    visibleConfusion: PropTypes.number,\n\n    clearSounds: PropTypes.func.isRequired,\n    initializeConfusion: PropTypes.func.isRequired,\n    showConfusionByIndex: PropTypes.func.isRequired,\n};\nexport default Confusion;","import { connect } from 'react-redux';\nimport Confusion from './Confusion';\nimport { operations } from '../../store';\n\nimport '../../styles/css/Confusion.css';\nimport '../../styles/css/Drill.css';\n\nconst mapStateToProps = ({ settings: { pronunciationType }, sounds: { consonants, confusions, confusionLoaded, visibleConfusion, showConfusionByIndex }, view: { hintVisible } }) => ({\n    consonants,\n    confusions,\n    confusionLoaded,\n    hintVisible,\n    pronunciationType,\n    visibleConfusion,\n    showConfusionByIndex,\n});\nexport default connect(mapStateToProps, operations)(Confusion);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { memoize } from '../../services/Utils';\n\nconst getCharacterClass = memoize((highlightedCharacters, character) => highlightedCharacters.length === 0 || highlightedCharacters.some(c => c === character) ? 'highlighted' : null, 100);\n\nconst ReviewCharacter = ({ character, highlight, highlightedCharacters }) => {\n    const className = getCharacterClass(highlightedCharacters, character);\n    return <div className={className} onMouseOver={ () => highlight(character) } onMouseOut={ () => highlight(null)} key={ character }>{ character }</div>;\n};\n\nReviewCharacter.propTypes = {\n    character: PropTypes.string.isRequired,\n    highlight: PropTypes.func.isRequired,\n    highlightedCharacters: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default ReviewCharacter;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction leave(evt, url) {\n    evt.preventDefault();\n    window.open(url, 'external');\n}\nconst OutboundLink = ({ url, children }) => <a href={ url } onClick={ (evt) => leave(evt, url) } >{ children }</a>;\n\nOutboundLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    children: PropTypes.string.isRequired\n};\n\nexport default OutboundLink;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ReviewCharacter from './ReviewCharacter';\nimport Hint from '../common/Hint';\nimport OutboundLink from '../common/OutboundLink';\nimport { getUniqueValues } from '../../services/Utils';\n\nconst buildCharacterList = (characters, highlight, highlightedCharacters) => characters.map(character => <ReviewCharacter key={character} character={character} highlight={highlight} highlightedCharacters={highlightedCharacters} />);\n\nconst findAllMatchingConfusions = (confusions, c) => getUniqueValues(confusions\n    .filter(set => set.some(character => c === character))\n    .reduce((carry, set) => [...carry, ...set], []));\n\nclass Review extends Component {\n    constructor(...args) {\n        super(...args);\n\n        this.state = {\n            highlightedCharacters: []\n        };\n\n        this.highlight = this.highlight.bind(this);\n    }\n    highlight(character) {\n        if (!character) this.setState({ highlightedCharacters: [] });\n        else this.setState({ highlightedCharacters: findAllMatchingConfusions(this.props.confusions, character)});\n    }\n    render() {\n        const { low, mid, high } = this.props;\n        const { highlightedCharacters } = this.state;\n\n        return <div className=\"review\">\n            <h1>Consonant classes</h1>\n\n            <Hint {...this.props} title=\"Notes\">\n                <p>Mouse over any character to highlight the other characters you might consider similar-looking.</p>\n                <p>Practice mid- and high-class characters first, since there aren&apos;t many to remember. All other consonant will be, by definition, low.</p>\n                <p>Drilling here is <i>graduated</i> &mdash; that is, you will be tested on the first few of each class. More characters are added only after you have made no mistakes!</p>\n                <p>The consonants are listed and drilled in order of (tone-leading) frequency. The Thai alphabet closely follows <OutboundLink url=\"https://en.wikipedia.org/wiki/Zipf's_law\">Zipf&apos;s Law</OutboundLink>. So memorizing and mastering only the first few characters will be dramatically more helpful than memorizing only the last few!</p>\n                <p>Author&apos;s note: My personal sense is that mnemonics do not help with character classes. Tone rules are hard enough. They should feel as automatic as possible, which is why I have chosen graduated drilling here.</p>\n            </Hint>\n\n            <section>\n                <h2>High</h2>\n                <div className=\"high\">{ buildCharacterList(high, this.highlight, highlightedCharacters) }</div>\n            </section>\n            <section>\n                <h2>Mid</h2>\n                <div className=\"mid\">{ buildCharacterList(mid, this.highlight, highlightedCharacters) }</div>\n            </section>\n            <section>\n                <h2>Low</h2>\n                <div className=\"low\">{ buildCharacterList(low, this.highlight, highlightedCharacters) }</div>\n            </section>\n            <Link to=\"/basics/tones/classes/drill/mid-high\" className=\"button\">Drill (mid / high)</Link>\n            <Link to=\"/basics/tones/classes/drill/all\" className=\"button\">Drill (all)</Link>\n        </div>;\n    }\n}\n\nReview.propTypes = {\n    low: PropTypes.arrayOf(PropTypes.string).isRequired,\n    mid: PropTypes.arrayOf(PropTypes.string).isRequired,\n    high: PropTypes.arrayOf(PropTypes.string).isRequired,\n    confusions: PropTypes.arrayOf(PropTypes.array).isRequired,\n    hintVisible: PropTypes.bool.isRequired,\n};\n\nexport default Review;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Progress = ({ label='', max, value }) => {\n    const width = `${ Math.min(Math.max(0, value / max), 1) * 100 }%`;\n    return <div className=\"progress-bar\">\n        <div className=\"bar\" style={{ width }}></div>\n        <div className=\"label\">{ label }</div>\n    </div>;\n};\n\nProgress.propTypes = {\n    label: PropTypes.string,\n    max: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nexport default Progress;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { buildRandomizedValuesQueue, classNames, wait } from '../../services/Utils';\nimport { TONE_CLASS_LOW, TONE_CLASS_MID, TONE_CLASS_HIGH } from '../../services/Tones';\nimport ProgressBar from '../common/ProgressBar';\nconst makeQueue = buildRandomizedValuesQueue(1);\n\nclass Drill extends Component {\n    constructor(...args) {\n        super(...args);\n\n        this.state = {\n            busy: false,\n            correctItem: null,\n            hiddenItems: [],\n            index: 0,\n            stage: 0,\n            mistakesMade: false,\n            stageComplete: false,\n            queue: []\n        };\n\n        this.onKey = this.onKey.bind(this);\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.onKey);\n        this.reseed();\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKey);\n    }\n    reseed() {\n        const { low, high, mid, type } = this.props;\n        let { stage, queue, index } = this.state;\n        const currentCharacter = queue[index];\n        const rest = type === 'all' ? low : [];\n        const availableCharacters = [mid, high, rest]\n            .map(arr => arr.slice(0, stage + 2))\n            .reduce((availableCharacters, arr) => [...availableCharacters, ...arr]);\n\n        stage = index >= queue.length - 1 ? stage + 1 : stage;\n\n        do { queue = makeQueue(availableCharacters); } while (queue[0] === currentCharacter);\n\n        this.setState({\n            busy: false,\n            correctItem: null,\n            hiddenItems: [],\n            index: 0,\n            mistakesMade: false,\n            queue,\n            stage,\n            stageComplete: false,\n        });\n    }\n    async checkAnswer(toneClass) {\n        const { low, mid, high, type } = this.props;\n\n        if (this.state.busy) return;\n\n        const correct =\n            toneClass === TONE_CLASS_LOW && type === 'all' ? low :\n            toneClass === TONE_CLASS_MID ? mid :\n            toneClass === TONE_CLASS_HIGH ? high :\n            null;\n\n        if (correct === null) return;\n\n        this.setState({ busy: true });\n\n        let { hiddenItems, index, mistakesMade, queue } = this.state;\n\n        if (correct.some(c => c === queue[index])) {\n            this.setState({ correctItem: toneClass });\n            await wait(1000);\n\n            index += 1;\n\n            if (mistakesMade) {\n                return this.reseed();\n            } else if (index >= queue.length) {\n                this.setState({ stageComplete: true });\n                await wait(500);\n                return this.reseed();\n            }\n\n            this.setState({\n                busy: false,\n                correctItem: null,\n                hiddenItems: [],\n                index,\n                queue,\n            });\n        } else {\n            this.setState({\n                busy: false,\n                correct: false,\n                mistakesMade: true,\n                hiddenItems: [...hiddenItems, toneClass],\n            });\n        }\n    }\n    onKey({code}) {\n        if (code === 'ArrowRight') this.checkAnswer(TONE_CLASS_MID);\n        else if (code === 'ArrowUp') this.checkAnswer(TONE_CLASS_HIGH);\n        else if (code === 'ArrowDown') this.checkAnswer(TONE_CLASS_LOW);\n    }\n    render() {\n        const { type } = this.props;\n        const { queue, index, hiddenItems, correctItem, mistakesMade, stage, stageComplete } = this.state;\n        const labels = ['M', 'H', 'L'];\n        const tones = [TONE_CLASS_MID, TONE_CLASS_HIGH, TONE_CLASS_LOW];\n\n        const getAnswer = (index) => {\n            const correct = correctItem === tones[index];\n            const incorrect = hiddenItems.some(item => item === tones[index]);\n            const className = classNames({\n                [`answer-${ index + 1}`]: true,\n                correct,\n                incorrect,\n            });\n            return <h3 key={index} className={ className } onClick={ () => this.checkAnswer(tones[index]) }>{ labels[index] }</h3>;\n        };\n\n        const character = queue[index];\n\n        const progress = mistakesMade ? 0\n            : stageComplete ? queue.length\n            : correctItem !== null ? index + 1\n            : index;\n\n        return <div className=\"drill\">\n            <div className=\"container\">\n                <h1>{character}</h1>\n                { getAnswer(0) }\n                { getAnswer(1) }\n                { type === 'all' ? getAnswer(2) : null }\n            </div>\n            <ProgressBar max={queue.length} value={progress} label={ `Stage ${stage}` } />\n        </div>;\n    }\n}\n\nDrill.propTypes = {\n    low: PropTypes.arrayOf(PropTypes.string).isRequired,\n    high: PropTypes.arrayOf(PropTypes.string).isRequired,\n    mid: PropTypes.arrayOf(PropTypes.string).isRequired,\n    type: PropTypes.oneOf(['all', 'mid-high']).isRequired,\n};\n\nexport default Drill;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Review from './Review';\nimport Drill from './Drill';\n\nimport { lowCharacters, midCharacters, highCharacters } from '../../services/Tones';\n\nconst lowChars = lowCharacters.split('');\nconst midChars = midCharacters.split('');\nconst highChars = highCharacters.split('');\n\nclass ConsonantClasses extends Component {\n    componentDidMount() {\n        // this.props.initializeTones();\n        this.props.initializeConsonants();\n    }\n\n    render() {\n        const { confusions, match: { params: { type } } } = this.props;\n\n        return <div className=\"consonant-classes\">\n            { type === undefined ?\n                <Review {...this.props} low={lowChars} mid={midChars} high={highChars} confusions={ confusions } /> :\n                <Drill type={ type } low={lowChars}  high={highChars}  mid={midChars} />\n            }\n        </div>;\n    }\n}\n\nConsonantClasses.propTypes = {\n    confusions: PropTypes.array,\n    initializeConsonants: PropTypes.func.isRequired,\n    initializeTones: PropTypes.func.isRequired,\n    match: PropTypes.shape({ params: PropTypes.object }),\n};\nexport default ConsonantClasses;","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport ConsonantClasses from './ConsonantClasses';\n\nimport '../../styles/css/ConsonantClasses.css';\nimport '../../styles/css/Hint.css';\n\nconst mapStateToProps = ({ sounds: { confusions },  tones: { tonesmap }, view: { hintVisible }}) => ({\n    confusions,\n    hintVisible,\n    tonesmap\n});\n\nexport default connect(mapStateToProps, operations)(ConsonantClasses);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getTonesDescriptors } from '../../services/Tones';\n\n\nclass DrillButtons extends PureComponent {\n    constructor(...args) {\n        super(...args);\n\n        this.state = {\n            label: ''\n        };\n\n        this.changeLabel = this.changeLabel.bind(this);\n    }\n    changeLabel(label, className) {\n        this.setState({ label });\n        this.props.onHover(label, className);\n    }\n    render() {\n        let {label} = this.state;\n        let descriptorsList = getTonesDescriptors();\n        let buttons = descriptorsList.map(({ stage, label, className }) =>\n            <Link\n                className=\"button\"\n                key={ stage }\n                onMouseOver={ () => this.changeLabel(label, className) }\n                onMouseOut={ () => this.changeLabel('') }\n                to={`/basics/tones/rules/drill/${stage}`} >{stage}</Link>);\n\n        return <div className=\"drill-buttons\">\n            <h3>Practice starting at stage:</h3>\n            <div className=\"buttons\">{ buttons }</div>\n            <h4 className=\"labels\">{ label }</h4>\n        </div>;\n    }\n}\n\nDrillButtons.propTypes = {\n    onHover: PropTypes.func.isRequired\n};\nexport default DrillButtons;","import React, { PureComponent } from 'react';\nimport DrillButtons from './DrillButtons';\nimport Hint from '../common/Hint';\nimport { classNames } from '../../services/Utils';\n\nclass Review extends PureComponent {\n    constructor(...args) {\n        super(...args);\n\n        this.state = {\n            focusedStage: null,\n            className: null,\n        };\n\n        this.changeFocus = this.changeFocus.bind(this);\n\n        this.buttons = [];\n    }\n    changeFocus(focusedStage, className) {\n        this.setState({ focusedStage, className });\n    }\n    render() {\n        const { focusedStage, className } = this.state;\n\n        const tableClasses = focusedStage === null ? null : classNames({\n            filtered: !!className,\n            [className] : !!className,\n        });\n\n        return <div className=\"review\">\n            <h1>Tones</h1>\n\n            <Hint {...this.props} title=\"Hint\">\n                <p>Consider learning mid-class rules first. They make a great foundation! The other classes essentially &quot;borrow&quot; something from mid-class rules.</p>\n                <p>On the other hand, tone-leading low-class characters are more frequent than mid- and high-class characters (according to my studies: 42% vs. 35% &amp; 23%.)</p>\n            </Hint>\n\n            <h2>Rules for syllables with no tone markers</h2>\n            <table className={ tableClasses }>\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th colSpan=\"3\">Live</th>\n                        <th colSpan=\"3\">Dead</th>\n                    </tr>\n                    <tr>\n                        <th></th>\n                        <th colSpan=\"3\">Open + Long / Closed with Sonorant</th>\n                        <th>Open + short</th>\n                        <th>Closed + short</th>\n                        <th>Closed + long</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th className=\"high\">High</th>\n                        <td colSpan=\"3\" className=\"c-1 c-4 c-9\">R</td>\n                        <td colSpan=\"3\" className=\"c-2 c-3 c-4 c-9\">L</td>\n                    </tr>\n                    <tr>\n                        <th className=\"mid\">Mid</th>\n                        <td colSpan=\"3\" className=\"c-1 c-4 c-8\"></td>\n                        <td colSpan=\"3\" className=\"c-2 c-3 c-4 c-8\">L</td>\n                    </tr>\n                    <tr>\n                        <th className=\"low\">Low</th>\n                        <td colSpan=\"3\" className=\"c-1 c-4 c-7\"></td>\n                        <td colSpan=\"2\" className=\"c-2 c-3 c-4 c-7\">H</td>\n                        <td className=\"c-3 c-4 c-7\">F</td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <h2>Rules for syllables with tone markers</h2>\n            <table className={ tableClasses }>\n                <thead>\n                <tr>\n                        <th></th>\n                        <th>อ่</th>\n                        <th>อ้</th>\n                        <th>อ๊</th>\n                    <th>อ๋</th>\n                </tr>\n                <tr>\n                    <th></th>\n                    <th>Mai ek</th>\n                    <th>Mai tho</th>\n                    <th>Mai tri</th>\n                    <th>Mai chattawa</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <th className=\"high\">High</th>\n                    <td className=\"c-5 c-6 c-9\">L</td>\n                    <td className=\"c-5 c-6 c-9\">F</td>\n                    <td><span role=\"img\" aria-label=\"N/A\">&#x1F6AB;</span></td>\n                    <td><span role=\"img\" aria-label=\"N/A\">&#x1F6AB;</span></td>\n                </tr>\n                <tr>\n                    <th className=\"mid\">Mid</th>\n                    <td className=\"c-5 c-6 c-8\">L</td>\n                    <td className=\"c-5 c-6 c-8\">F</td>\n                    <td className=\"c-6 c-8\">H</td>\n                    <td className=\"c-6 c-8\">R</td>\n                </tr>\n                <tr>\n                    <th className=\"low\">Low</th>\n                    <td className=\"c-5 c-6 c-7\">F</td>\n                    <td className=\"c-5 c-6 c-7\">H</td>\n                    <td><span role=\"img\" aria-label=\"N/A\">&#x1F6AB;</span></td>\n                    <td><span role=\"img\" aria-label=\"N/A\">&#x1F6AB;</span></td>\n                </tr>\n            </tbody>\n        </table>\n\n        <DrillButtons onHover={ this.changeFocus } />\n    </div>;\n    }\n}\n\nexport default Review;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TONE_FALLING, TONE_HIGH, TONE_LOW, TONE_MID, TONE_RISING } from '../../services/Tones';\nimport { buildRandomizedValuesQueue, classNames, wait } from '../../services/Utils';\nimport { getTone, getTonesByStage } from '../../services/Tones';\nimport { say, LANGUAGE_THAI } from '../../services/Voices';\nimport ProgressBar from '../common/ProgressBar';\n\nconst randomize = buildRandomizedValuesQueue(3);\n\nclass Drill extends PureComponent {\n    constructor(...args) {\n        super(...args);\n\n        let { stage } = this.props;\n        stage = Math.max(1, stage);\n\n        const { queue, label } = this.reseed(null, stage);\n\n        this.state = {\n            busy: false,\n            correctItem: null,\n            hiddenItems: [],\n            index: 0,\n            label,\n            mistakeMake: false,\n            queue,\n            stage,\n        };\n\n        this.onKey = this.onKey.bind(this);\n    }\n    reseed(currentQueue, stage) {\n        let queue;\n\n        let {tones, label} = getTonesByStage(stage, this.props.tonesmap);\n        do {\n            queue = randomize(tones).map(item => ({ item, word: item.examples[Math.floor(Math.random() * item.examples.length)] , tone: getTone(item)}));\n        } while(currentQueue && queue.tone === currentQueue[currentQueue.length - 1].tone);\n\n        return {queue, label};\n    }\n    componentDidMount() {\n        this.props.initializeTones();\n        document.addEventListener('keydown', this.onKey);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKey);\n    }\n    async checkAnswer(answer) {\n        if (this.state.busy) return;\n\n        let { queue, correctItem, hiddenItems, index, label, mistakeMake, stage } = this.state;\n        let delayTime = 300;\n        const { tone, word } = queue[index];\n\n        if (answer === tone) {\n            this.setState({\n                busy: true,\n                correctItem: answer,\n            });\n            say(LANGUAGE_THAI, { thai: word });\n            index += 1;\n            hiddenItems = [];\n            correctItem = null;\n            delayTime = 1000;\n\n            if (mistakeMake) {\n                index = 0;\n                ({ queue, label } = this.reseed(queue, stage));\n                mistakeMake = false;\n            } else if (index >= queue.length) {\n                index = 0;\n                stage += 1;\n                ({ queue, label } = this.reseed(queue, stage));\n            }\n\n        } else {\n            hiddenItems = [...hiddenItems, answer];\n            mistakeMake = true;\n\n            this.setState({\n                busy: true,\n                hiddenItems,\n            });\n        }\n\n        await wait(delayTime);\n\n        this.setState({\n            busy: false,\n            correctItem,\n            hiddenItems,\n            index,\n            label,\n            mistakeMake,\n            queue,\n            stage,\n        });\n    }\n    onKey({code}) {\n        if (code === 'ArrowRight') this.checkAnswer(TONE_HIGH);\n        else if (code === 'ArrowUp') this.checkAnswer(TONE_RISING);\n        else if (code === 'ArrowDown') this.checkAnswer(TONE_FALLING);\n        else if (code === 'ArrowLeft') this.checkAnswer(TONE_LOW);\n        else if (code === 'Enter' || code === 'Return' || code === 'Space') this.checkAnswer(TONE_MID);\n    }\n\n    render() {\n        const { queue, index, hiddenItems, correctItem, label, mistakeMake } = this.state;\n        const { word } = queue[index];\n        const getAnswer = (key, tone, label) => {\n            const className = classNames({\n                [`answer-${key}`]: true,\n                incorrect: hiddenItems.some(item => item === tone),\n                correct: correctItem === tone\n            });\n            return <h3 className={ className } onClick={ () => this.checkAnswer(tone) }>{label}</h3>;\n        };\n\n        return <div className=\"drill\">\n            <div className=\"container\">\n                <h1>{word}</h1>\n                { getAnswer(0, TONE_LOW, 'L') }\n                { getAnswer(1, TONE_HIGH, 'H') }\n                { getAnswer(2, TONE_RISING, 'R') }\n                { getAnswer(3, TONE_FALLING, 'F') }\n                { getAnswer(4, TONE_MID, 'Neutral') }\n            </div>\n            <ProgressBar max={queue.length} value={ mistakeMake ? 0 : index} label={ label } />\n        </div>;\n    }\n}\n\nDrill.propTypes = {\n    tonesmap: PropTypes.array.isRequired,\n    stage: PropTypes.number,\n\n    initializeTones: PropTypes.func.isRequired,\n};\n\nexport default Drill;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Review from './Review';\nimport Drill from './Drill';\n\nclass ToneRules extends Component {\n    componentDidMount() {\n        this.props.initializeTones();\n    }\n    render() {\n        const { match: { params: { stage } }, tonesmap } = this.props;\n\n        return <div className=\"tone-rules\">\n            { stage === undefined ? <Review {...this.props} /> : null }\n            { stage && tonesmap.length ? <Drill {...this.props} stage={parseInt(stage, 10)} /> : null }\n        </div>;\n    }\n}\n\nToneRules.propTypes = {\n    initializeTones: PropTypes.func.isRequired,\n    match: PropTypes.shape({ params: PropTypes.object }),\n    tonesmap: PropTypes.array.isRequired,\n};\n\nexport default ToneRules;","import { connect } from 'react-redux';\nimport { operations } from '../../store';\nimport ToneRules from './ToneRules';\n\nimport '../../styles/css/ToneRules.css';\n\nconst mapStateToProps = ({ tones: { tonesmap }, view: { hintVisible }}) => ({\n    hintVisible,\n    tonesmap,\n});\nexport default connect(mapStateToProps, operations)(ToneRules);","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { operations } from '../../store';\n\nclass Tracking extends Component {\n    componentDidUpdate(prevProps) {\n        const { trackRouteChange, location: { pathname } } = this.props;\n        const { location: { pathname: oldPathname }} = prevProps;\n\n        if (pathname !== oldPathname) trackRouteChange(pathname);\n    }\n\n    render() {\n        return null;\n    }\n}\n\nTracking.propTypes = {\n    location: PropTypes.shape({ pathname: PropTypes.string }).isRequired,\n    trackRouteChange: PropTypes.func.isRequired,\n};\n\nexport default connect(null, operations)(Tracking);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => <div>\n    <h1>Not found</h1>\n    <Link to=\"/\">Go to top page</Link>\n</div>;\n\nexport default NotFound;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { operations } from './store';\nimport ScrollReset from './components/common/ScrollReset';\nimport Loading from './components/Loading';\nimport Breadcrumb from './components/Navigation/Breadcrumbs';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport NavigationBasics from './components/Navigation/BasicsNavigation';\nimport ConsonantNavigation from './components/Navigation/ConsonantNavigation';\nimport TonesNavigation from './components/Navigation/ToneNavigation';\nimport Progress from './components/Progress';\nimport Settings from './components/Settings';\nimport Practice from './components/Practice';\nimport Test from './components/Test';\nimport TestSelector from './components/TestSelector';\nimport Vowels from './components/Vowels';\nimport Consonants from './components/Consonants';\nimport Confusion from './components/Confusion';\nimport ConsonantClasses from './components/ConsonantClasses';\nimport ToneRules from './components/ToneRules';\nimport Tracking from './components/common/Tracking';\nimport NotFound from './components/NotFound';\n\nimport './styles/css/App.css';\nimport 'rc-slider/assets/index.css';\n\nclass App extends Component {\n  async componentDidMount() {\n    const { initializeWordsManager, initializeVoiceManager, initializeSettings, setApplicationReady } = this.props;\n\n    await Promise.all([\n      initializeVoiceManager(),\n      initializeWordsManager(),\n      initializeSettings(),\n    ])\n    .then(() => setApplicationReady());\n  }\n  render() {\n    if (!this.props.applicationReady) return <Loading />;\n\n    return <Router>\n      <ScrollReset>\n        <Breadcrumb />\n        <Route path=\"*\" component={Tracking} />\n        <Switch>\n          <Route path=\"/\" exact component={MainNavigation} />\n          <Route path=\"/basics\" exact component={NavigationBasics} />\n          <Route path='/basics/vowels' component={Vowels} />\n          <Route path='/basics/consonants' exact component={ConsonantNavigation} />\n          <Route path='/basics/consonants/confusion/drill-:visibleConfusion(\\d)' component= {Confusion} />\n          <Route path=\"/basics/consonants/review\" component={Consonants} />\n          <Route path='/basics/consonants/confusion' component= {Confusion} />\n          <Route path=\"/basics/tones\" exact component={TonesNavigation} />\n          <Route path=\"/basics/tones/classes\" exact component={ConsonantClasses} />\n          <Route path=\"/basics/tones/classes/drill/:type(all|mid-high)\" component={ConsonantClasses} />\n          <Route path=\"/basics/tones/rules\" exact component={ToneRules} />\n          <Route path=\"/basics/tones/rules/drill/:stage(\\d+)\" component={ToneRules} />\n\n          <Route path='/progress' component={Progress} />\n          <Route path='/practice/:type?' component={Practice} />\n          <Route path='/test' exact component={TestSelector} />\n          <Route path='/test/:type(overdue|current)' component={Test} />\n\n          <Route path=\"/settings\" component={Settings} />\n          <Route component={NotFound} />\n        </Switch>\n      </ScrollReset>\n    </Router>;\n  }\n}\n\nApp.propTypes = {\n  applicationReady: PropTypes.bool.isRequired,\n  initializeWordsManager: PropTypes.func.isRequired,\n  initializeSettings: PropTypes.func.isRequired,\n  initializeVoiceManager: PropTypes.func.isRequired,\n  setApplicationReady: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  applicationReady: state.view.applicationReady,\n});\n\nexport default connect(mapStateToProps, operations)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport store from './store';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}